<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">PLoS One</journal-id><journal-id journal-id-type="iso-abbrev">PLoS ONE</journal-id><journal-id journal-id-type="publisher-id">plos</journal-id><journal-id journal-id-type="pmc">plosone</journal-id><journal-title-group><journal-title>PLoS ONE</journal-title></journal-title-group><issn pub-type="epub">1932-6203</issn><publisher><publisher-name>Public Library of Science</publisher-name><publisher-loc>San Francisco, USA</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">25061683</article-id><article-id pub-id-type="pmc">4111306</article-id><article-id pub-id-type="publisher-id">PONE-D-13-46203</article-id><article-id pub-id-type="doi">10.1371/journal.pone.0102799</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Biology and Life Sciences</subject><subj-group><subject>Computational Biology</subject><subj-group><subject>Genome Analysis</subject><subj-group><subject>Genetic Networks</subject></subj-group></subj-group></subj-group><subj-group><subject>Ecology</subject><subj-group><subject>Community Ecology</subject><subj-group><subject>Community Structure</subject></subj-group></subj-group></subj-group><subj-group><subject>Genetics</subject><subj-group><subject>Genomics</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Computer and Information Sciences</subject><subj-group><subject>Computerized Simulations</subject></subj-group><subj-group><subject>Computer Modeling</subject></subj-group><subj-group><subject>Information Technology</subject><subj-group><subject>Databases</subject></subj-group></subj-group><subj-group><subject>Network Analysis</subject><subj-group><subject>Social Networks</subject></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Ecology and Environmental Sciences</subject></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Physical Sciences</subject><subj-group><subject>Mathematics</subject><subj-group><subject>Applied Mathematics</subject><subj-group><subject>Algorithms</subject></subj-group></subj-group></subj-group></subj-group><subj-group subj-group-type="Discipline-v2"><subject>Social Sciences</subject><subj-group><subject>Sociology</subject></subj-group></subj-group></article-categories><title-group><article-title>Online Community Detection for Large Complex Networks</article-title><alt-title alt-title-type="running-head">Online Community Detection for Complex Networks</alt-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Pan</surname><given-names>Gang</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"><sup>*</sup></xref></contrib><contrib contrib-type="author"><name><surname>Zhang</surname><given-names>Wangsheng</given-names></name><xref ref-type="aff" rid="aff1"/></contrib><contrib contrib-type="author"><name><surname>Wu</surname><given-names>Zhaohui</given-names></name><xref ref-type="aff" rid="aff1"/></contrib><contrib contrib-type="author"><name><surname>Li</surname><given-names>Shijian</given-names></name><xref ref-type="aff" rid="aff1"/></contrib></contrib-group><aff id="aff1"><addr-line>Department of Computer Science, Zhejiang University, Hangzhou, Zhejiang, China</addr-line></aff><contrib-group><contrib contrib-type="editor"><name><surname>Moreno</surname><given-names>Yamir</given-names></name><role>Editor</role><xref ref-type="aff" rid="edit1"/></contrib></contrib-group><aff id="edit1"><addr-line>University of Zaragoza, Spain</addr-line></aff><author-notes><corresp id="cor1">* E-mail: <email>gpan@zju.edu.cn</email></corresp><fn fn-type="conflict"><p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p></fn><fn fn-type="con"><p>Conceived and designed the experiments: GP WZ. Performed the experiments: WZ. Analyzed the data: GP WZ. Contributed reagents/materials/analysis tools: SL ZW WZ. Wrote the paper: GP WZ.</p></fn></author-notes><pub-date pub-type="collection"><year>2014</year></pub-date><pub-date pub-type="epub"><day>25</day><month>7</month><year>2014</year></pub-date><volume>9</volume><issue>7</issue><elocation-id>e102799</elocation-id><history><date date-type="received"><day>5</day><month>11</month><year>2013</year></date><date date-type="accepted"><day>23</day><month>6</month><year>2014</year></date></history><permissions><copyright-year>2014</copyright-year><copyright-holder>Pan et al</copyright-holder><license><license-p>This is an open-access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p></license></permissions><abstract><p>Complex networks describe a wide range of systems in nature and society. To understand complex networks, it is crucial to investigate their community structure. In this paper, we develop an online community detection algorithm with linear time complexity for large complex networks. Our algorithm processes a network edge by edge in the order that the network is fed to the algorithm. If a new edge is added, it just updates the existing community structure in constant time, and does not need to re-compute the whole network. Therefore, it can efficiently process large networks in real time. Our algorithm optimizes expected modularity instead of modularity at each step to avoid poor performance. The experiments are carried out using 11 public data sets, and are measured by two criteria, modularity and NMI (Normalized Mutual Information). The results show that our algorithm's running time is less than the commonly used Louvain algorithm while it gives competitive performance.</p></abstract><funding-group><funding-statement>This work has been supported by National Key Basic Research Program of China(2013CB329504) &#x0003c;<ext-link ext-link-type="uri" xlink:href="http://www.973.gov.cn/English/Index.aspx">http://www.973.gov.cn/English/Index.aspx</ext-link>&#x0003e; and Qianjiang Talent Program of Zhejiang(2011R10078)&#x0003c;<ext-link ext-link-type="uri" xlink:href="http://www.zjhrss.gov.cn/col/col1128/index.html">http://www.zjhrss.gov.cn/col/col1128/index.html</ext-link>&#x0003e;. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement></funding-group><counts><page-count count="12"/></counts></article-meta></front><body><sec id="s1"><title>Introduction</title><p>Complex networks describe a wide range of systems in nature and society <xref rid="pone.0102799-Rubinov1" ref-type="bibr">[1]</xref>&#x02013;<xref rid="pone.0102799-Phithakkitnukoon1" ref-type="bibr">[3]</xref>. Frequently cited examples include the Internet in which routers and computers are connected by physical links, and collaboration networks in which researchers are linked by coauthoring. To understand the formation, evolution, and function of complex networks, it is crucial to investigate their community structure, not only for uncovering the relations between internal structure and functions, but also for practical applications in many disciplines such as biology and sociology <xref rid="pone.0102799-Fan1" ref-type="bibr">[4]</xref>&#x02013;<xref rid="pone.0102799-Tang1" ref-type="bibr">[6]</xref>.</p><p>Intuitively, a community of a complex network consists of a cohesive group of nodes that are relatively densely connected to each other but sparsely connected to other dense groups in the network <xref rid="pone.0102799-Porter1" ref-type="bibr">[7]</xref>. Community detection aims to identify the communities by only using the information encoded in the network topology <xref rid="pone.0102799-Fortunato1" ref-type="bibr">[8]</xref>. It is one of the critical issues in the study of complex networks. A wide variety of community detection methods have been developed to serve different scientific needs <xref rid="pone.0102799-Fortunato1" ref-type="bibr">[8]</xref>, <xref rid="pone.0102799-Lancichinetti1" ref-type="bibr">[9]</xref>.</p><p>Modularity is a commonly used criterion for community detection. It was first proposed in Newman <italic>et al.</italic>
<xref rid="pone.0102799-Newman1" ref-type="bibr">[10]</xref>. Good <italic>et al.</italic>
<xref rid="pone.0102799-Good1" ref-type="bibr">[11]</xref> describe the performance of modularity maximization in practical contexts and present a broad characterization of its performance in such situations. A wide variety of algorithms for solving the modularity optimization problem have been developed <xref rid="pone.0102799-Leskovec1" ref-type="bibr">[12]</xref>. For example, Clauset <italic>et al.</italic>
<xref rid="pone.0102799-Clauset1" ref-type="bibr">[13]</xref> present a hierarchical agglomeration algorithm for detecting communities. Newman <italic>et al.</italic>
<xref rid="pone.0102799-Newman2" ref-type="bibr">[14]</xref> show that the modularity can be expressed in terms of the eigenvectors of a characteristic matrix for the network. This expression leads to a spectral algorithm for community detection. Modularity can be generalized in a principled fashion to incorporate the edge information such as direction and weight. Leicht <italic>et al.</italic>
<xref rid="pone.0102799-Leicht1" ref-type="bibr">[15]</xref> consider the problem of finding communities in directed networks. Newman <italic>et al.</italic>
<xref rid="pone.0102799-Newman3" ref-type="bibr">[16]</xref> point out that weighted networks can, in many cases, be analyzed using a simple mapping from a weighted network to an unweighted multigraph. Lancichinetti <italic>et al.</italic>
<xref rid="pone.0102799-Lancichinetti1" ref-type="bibr">[9]</xref> generate directed and weighted networks with built-in community structure and show how modularity optimization performs on their benchmark. However, Fortunato <italic>et al.</italic>
<xref rid="pone.0102799-Fortunato2" ref-type="bibr">[17]</xref> find that modularity optimization may fail to identify communities smaller than a scale which depends on the total size of the network and on the degree of interconnectedness of the communities, which is called a resolution problem. To mitigate the resolution issue, Reichardt <italic>et al.</italic>
<xref rid="pone.0102799-Reichardt1" ref-type="bibr">[18]</xref> show how community detection can be interpreted as finding the ground state of an infinite range spin glass. Ruan <italic>et al.</italic>
<xref rid="pone.0102799-Ruan1" ref-type="bibr">[19]</xref> propose a recursive algorithm HQCUT to solve the resolution limit problem. Arenas <italic>et al.</italic>
<xref rid="pone.0102799-Arenas1" ref-type="bibr">[20]</xref> propose a method that allows for multiple resolution screening of modular structures. Aldecoa <italic>et al.</italic>
<xref rid="pone.0102799-Aldecoa1" ref-type="bibr">[21]</xref> introduce a criteria called &#x0201c;Surprise&#x0201d; to resolve the resolution problem.</p><p>In some kinds of complex networks, new edges continually appear while old edges do not disappear, resulting in a large network. For example, citation networks are growing as new papers cite existing papers. To efficiently process these kinds of networks, we desire a community detection algorithm that will be able to process a network (1) without recomputing whole network after every new edge/node and (2) without the need of whole network structure available at each update. Although many community detection algorithms have been proposed, to our best knowledge, there is no algorithm that can meet these two requirements. Many existing algorithms need to start from the beginning when the network is expanded, even when only one node or edge is added.</p><p>Many efforts have been made to meet the two requirements. Leung <italic>et al.</italic>
<xref rid="pone.0102799-Leung1" ref-type="bibr">[22]</xref> identified novel characteristics and drawbacks of label propagation algorithm, and extended it by incorporating different heuristics to facilitate reliable and multi-functional real time community detection. Huang <italic>et al.</italic>
<xref rid="pone.0102799-Huang1" ref-type="bibr">[23]</xref> introduced a new quality function of local community, and presented a fast local expansion algorithm for uncovering communities in large-scale networks. Kawadia <italic>et al.</italic>
<xref rid="pone.0102799-Kawadia1" ref-type="bibr">[24]</xref> presented a new measure of partition distance called estrangement, and showed that constraining estrangement enables it to find meaningful temporal communities in diverse real-world data sets. However, both Leung's algorithm and Huang's algorithm cannot handle growing networks, since they must recompute the whole network after every new edge/node. Kawadia's algorithm requires the whole network structure to be available at each update.</p><p>In this paper, we develop a community detection algorithm to meet the two requirements. Our algorithm is an online algorithm, i.e. it can process a network edge by edge in the order that the network is fed to the algorithm, without having the whole network available from the start. Our algorithm updates existing community structure in constant time once a new edge is added. The update avoids re-processing the whole network structure, since it only needs knowledge about a network's local structure related to the new edge, thus our algorithm can efficiently process large networks in real time. Our algorithm has <inline-formula><inline-graphic xlink:href="pone.0102799.e001.jpg"/></inline-formula> time complexity and <inline-formula><inline-graphic xlink:href="pone.0102799.e002.jpg"/></inline-formula> space complexity, where <inline-formula><inline-graphic xlink:href="pone.0102799.e003.jpg"/></inline-formula> is number of edges, <inline-formula><inline-graphic xlink:href="pone.0102799.e004.jpg"/></inline-formula> is number of nodes, and <inline-formula><inline-graphic xlink:href="pone.0102799.e005.jpg"/></inline-formula> is number of communities.</p><p>This paper is an extension of our previous work <xref rid="pone.0102799-Zhang1" ref-type="bibr">[25]</xref> published in IJCAI'13 (downloaded for free in <ext-link ext-link-type="uri" xlink:href="http://ijcai.org/papers13/Papers/IJCAI13-281.pdf">http://ijcai.org/papers13/Papers/IJCAI13-281.pdf</ext-link>). The main differences are three-fold: (1) This paper proposes a generative model for complex network based on preferential attachment mechanism, which helps us to infer network's future structure by its current structure and gives a solid theoretical motivation to the algorithm; (2) This paper develops a deterministic online community detection algorithm, which uses expected modularity to make an informed choice. The conference paper's non-deterministic algorithm may need many runs; (3) This paper uses additional datasets and extensive experiments for more convincing results.</p></sec><sec sec-type="methods" id="s2"><title>Method</title><p>To achieve the online community detection, we first propose a generative model for complex networks based on the preferential attachment mechanism <xref rid="pone.0102799-Price1" ref-type="bibr">[26]</xref>, <xref rid="pone.0102799-Barabsi1" ref-type="bibr">[27]</xref>, which helps us to predict a network's future structure based on its current structure. We then develop an online community detection algorithm, which processes a network edge by edge. It optimizes expected modularity instead of modularity to avoid poor performance in some specific cases. Expected modularity can be calculated based on our generative model.</p><sec id="s2a"><title>Preliminaries</title><p>A network <inline-formula><inline-graphic xlink:href="pone.0102799.e006.jpg"/></inline-formula> is a set of <inline-formula><inline-graphic xlink:href="pone.0102799.e007.jpg"/></inline-formula> nodes <inline-formula><inline-graphic xlink:href="pone.0102799.e008.jpg"/></inline-formula> connected by a set of <inline-formula><inline-graphic xlink:href="pone.0102799.e009.jpg"/></inline-formula> edges <inline-formula><inline-graphic xlink:href="pone.0102799.e010.jpg"/></inline-formula>. The network considered here is undirected, unweighted, and without self-loops or isolated node. Let <inline-formula><inline-graphic xlink:href="pone.0102799.e011.jpg"/></inline-formula> denote a partition of <inline-formula><inline-graphic xlink:href="pone.0102799.e012.jpg"/></inline-formula>. It is a division of <inline-formula><inline-graphic xlink:href="pone.0102799.e013.jpg"/></inline-formula> into <inline-formula><inline-graphic xlink:href="pone.0102799.e014.jpg"/></inline-formula> non-overlapping and non-empty communities <inline-formula><inline-graphic xlink:href="pone.0102799.e015.jpg"/></inline-formula> that cover all of <inline-formula><inline-graphic xlink:href="pone.0102799.e016.jpg"/></inline-formula>. As a performance measure for the partition quality, modularity was first proposed by Newman <italic>et al.</italic>
<xref rid="pone.0102799-Newman4" ref-type="bibr">[28]</xref>. It can be expressed as <disp-formula id="pone.0102799.e017"><graphic xlink:href="pone.0102799.e017.jpg" position="anchor" orientation="portrait"/><label>(1)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e018.jpg"/></inline-formula> is the number of intra-community edges within community <inline-formula><inline-graphic xlink:href="pone.0102799.e019.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0102799.e020.jpg"/></inline-formula> is the number of edges within network <inline-formula><inline-graphic xlink:href="pone.0102799.e021.jpg"/></inline-formula>, and <inline-formula><inline-graphic xlink:href="pone.0102799.e022.jpg"/></inline-formula> is the degree of community <inline-formula><inline-graphic xlink:href="pone.0102799.e023.jpg"/></inline-formula>, defined as <inline-formula><inline-graphic xlink:href="pone.0102799.e024.jpg"/></inline-formula>, where <inline-formula><inline-graphic xlink:href="pone.0102799.e025.jpg"/></inline-formula> is the degree of node <inline-formula><inline-graphic xlink:href="pone.0102799.e026.jpg"/></inline-formula>. Hence community detection can be formulated as a modularity optimization problem <disp-formula id="pone.0102799.e027"><graphic xlink:href="pone.0102799.e027.jpg" position="anchor" orientation="portrait"/></disp-formula>and Brandes <italic>et al.</italic>
<xref rid="pone.0102799-Brandes1" ref-type="bibr">[29]</xref> prove the conjectured hardness of this problem both in the general case and in the case with restriction to number of partitions <inline-formula><inline-graphic xlink:href="pone.0102799.e028.jpg"/></inline-formula>. This result makes heuristic techniques the only viable option for modularity optimization problem. However, heuristic techniques cannot guarantee that the partition is good enough. It may result in a poor partition for some networks. In other words, the algorithms fail to achieve an acceptable modularity. We say an algorithm encounters failure if all nodes are assigned to the same community.</p></sec><sec id="s2b"><title>Generative Model for Complex Network</title><p>Complex networks have non-trivial topological features that do not occur in some simple networks but often occur in real networks. An important feature of many complex networks is that their degree distributions follow a particular mathematical function called the power law <xref rid="pone.0102799-Barabsi1" ref-type="bibr">[27]</xref>, <xref rid="pone.0102799-Clauset2" ref-type="bibr">[30]</xref>, <xref rid="pone.0102799-Faloutsos1" ref-type="bibr">[31]</xref>, although it does not always hold <xref rid="pone.0102799-Stumpf1" ref-type="bibr">[32]</xref>. The power law implies that the degree distribution of the network has no characteristic scale.</p><p>It is widely recognized as a seminal work presenting a model for the observed stationary scale-free distributions of complex networks by Price <italic>et al.</italic>
<xref rid="pone.0102799-Price1" ref-type="bibr">[26]</xref>. Barabasi <italic>et al.</italic>
<xref rid="pone.0102799-Barabsi1" ref-type="bibr">[27]</xref> conclude that this feature is a consequence of two generic mechanisms: (1) networks expand continuously by the addition of new nodes; (2) new nodes attach preferentially to communities that are already well connected. Barabasi's model is recognized by academia <xref rid="pone.0102799-Newman5" ref-type="bibr">[33]</xref>, <xref rid="pone.0102799-Boccaletti1" ref-type="bibr">[34]</xref>. Specifically, a new node <inline-formula><inline-graphic xlink:href="pone.0102799.e029.jpg"/></inline-formula> will attach to an existing node <inline-formula><inline-graphic xlink:href="pone.0102799.e030.jpg"/></inline-formula> with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e031.jpg"/></inline-formula> in proportion to the degree of node <inline-formula><inline-graphic xlink:href="pone.0102799.e032.jpg"/></inline-formula>
<disp-formula id="pone.0102799.e033"><graphic xlink:href="pone.0102799.e033.jpg" position="anchor" orientation="portrait"/><label>(2)</label></disp-formula></p><p>The above model only considers the case that a new edge links a new node to an existing node. However, a new edge may link two existing nodes or two new nodes. In fact, estimating the likelihood of the appearance of a new edge between two existing nodes, called <italic>link prediction</italic>, is one of the fundamental problems in network analysis. A variant of preferential attachment mechanism can be used to do link prediction <xref rid="pone.0102799-Xie1" ref-type="bibr">[35]</xref>. Specifically, a new edge will link two existing nodes <inline-formula><inline-graphic xlink:href="pone.0102799.e034.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0102799.e035.jpg"/></inline-formula> with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e036.jpg"/></inline-formula> in proportion to the product of the degree of node <inline-formula><inline-graphic xlink:href="pone.0102799.e037.jpg"/></inline-formula> and the degree of node <inline-formula><inline-graphic xlink:href="pone.0102799.e038.jpg"/></inline-formula>
<disp-formula id="pone.0102799.e039"><graphic xlink:href="pone.0102799.e039.jpg" position="anchor" orientation="portrait"/><label>(3)</label></disp-formula></p><p>For a complete review of the statistical mechanics of network topology and dynamics of complex networks, one can refer to Boccaletti <italic>et al.</italic>
<xref rid="pone.0102799-Boccaletti1" ref-type="bibr">[34]</xref> or Albert <italic>et al.</italic>
<xref rid="pone.0102799-Albert1" ref-type="bibr">[36]</xref>. Mitzenmacher <italic>et al.</italic>
<xref rid="pone.0102799-Mitzenmacher1" ref-type="bibr">[37]</xref> briefly surveyed some other generative models that lead to scale-free distributions. For a summary of recent progress about link prediction algorithms, one can refer to Lu <italic>et al.</italic>
<xref rid="pone.0102799-L1" ref-type="bibr">[38]</xref>.</p><p>To facilitate subsequent work, we generalize a preferential attachment mechanism from node to community. A new node will attach to an existing community <inline-formula><inline-graphic xlink:href="pone.0102799.e040.jpg"/></inline-formula> with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e041.jpg"/></inline-formula> in proportion to the degree of community <inline-formula><inline-graphic xlink:href="pone.0102799.e042.jpg"/></inline-formula>
<disp-formula id="pone.0102799.e043"><graphic xlink:href="pone.0102799.e043.jpg" position="anchor" orientation="portrait"/></disp-formula>and a new edge will link two existing communities <inline-formula><inline-graphic xlink:href="pone.0102799.e044.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0102799.e045.jpg"/></inline-formula> with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e046.jpg"/></inline-formula> in proportion to the product of the degree of community <inline-formula><inline-graphic xlink:href="pone.0102799.e047.jpg"/></inline-formula> and the degree of community <inline-formula><inline-graphic xlink:href="pone.0102799.e048.jpg"/></inline-formula>
<disp-formula id="pone.0102799.e049"><graphic xlink:href="pone.0102799.e049.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>Here we propose a generative model for complex networks. Our model generates a network <inline-formula><inline-graphic xlink:href="pone.0102799.e050.jpg"/></inline-formula> with <inline-formula><inline-graphic xlink:href="pone.0102799.e051.jpg"/></inline-formula> edges by addition of new edges. It is starting from an empty network <inline-formula><inline-graphic xlink:href="pone.0102799.e052.jpg"/></inline-formula>. For <inline-formula><inline-graphic xlink:href="pone.0102799.e053.jpg"/></inline-formula>, there are three cases for a new edge <inline-formula><inline-graphic xlink:href="pone.0102799.e054.jpg"/></inline-formula> to be added in network <inline-formula><inline-graphic xlink:href="pone.0102799.e055.jpg"/></inline-formula>, namely,</p><p><bold>Case (a)</bold>: link a new node to an existing node, <inline-formula><inline-graphic xlink:href="pone.0102799.e056.jpg"/></inline-formula> or <inline-formula><inline-graphic xlink:href="pone.0102799.e057.jpg"/></inline-formula>, with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e058.jpg"/></inline-formula>;</p><p><bold>Case (b)</bold>: link two existing nodes, <inline-formula><inline-graphic xlink:href="pone.0102799.e059.jpg"/></inline-formula>, with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e060.jpg"/></inline-formula>;</p><p><bold>Case (c)</bold>: link two new nodes, <inline-formula><inline-graphic xlink:href="pone.0102799.e061.jpg"/></inline-formula>, with probability <inline-formula><inline-graphic xlink:href="pone.0102799.e062.jpg"/></inline-formula>.</p><p>For case (a) and (b), the addition of the new edge follows preferential attachment mechanism mentioned above (See <xref ref-type="fig" rid="pone-0102799-g001">Fig. 1</xref>). Notice that <inline-formula><inline-graphic xlink:href="pone.0102799.e063.jpg"/></inline-formula>. When <inline-formula><inline-graphic xlink:href="pone.0102799.e064.jpg"/></inline-formula>, our model is the same as Barabasi's model for growing networks.</p><fig id="pone-0102799-g001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g001</object-id><label>Figure 1</label><caption><title>Three cases for a new edge to be added in an existing network.</title><p>(a) linking a new node to an existing node; (b) linking two existing nodes; (c) linking two new nodes.</p></caption><graphic xlink:href="pone.0102799.g001"/></fig></sec><sec id="s2c"><title>Online Community Detection Algorithm</title><p>A straightforward way to do online community detection is to take a sequence of edges as input, and optimize modularity <inline-formula><inline-graphic xlink:href="pone.0102799.e065.jpg"/></inline-formula> at each step for current network <inline-formula><inline-graphic xlink:href="pone.0102799.e066.jpg"/></inline-formula> based on previous partition <inline-formula><inline-graphic xlink:href="pone.0102799.e067.jpg"/></inline-formula>. However, this greedy algorithm may have poor performance. Considering Barabasi's model that every new edge links a new node to an existing node, Brandes <italic>et al.</italic>
<xref rid="pone.0102799-Brandes1" ref-type="bibr">[29]</xref> prove that a partition with maximum modularity has no community that consists of a single node with degree one, and a new node should be assigned to an existing community, however this operation makes all nodes in a same community and results in zero modularity.</p><p>To avoid poor performance, our algorithm optimizes expected modularity <inline-formula><inline-graphic xlink:href="pone.0102799.e068.jpg"/></inline-formula> for final network <inline-formula><inline-graphic xlink:href="pone.0102799.e069.jpg"/></inline-formula>, instead of modularity <inline-formula><inline-graphic xlink:href="pone.0102799.e070.jpg"/></inline-formula> for current network <inline-formula><inline-graphic xlink:href="pone.0102799.e071.jpg"/></inline-formula> at each step. We calculate <inline-formula><inline-graphic xlink:href="pone.0102799.e072.jpg"/></inline-formula> based on our generative model and the partition as follows: for existing nodes, we keep them in their current communities; for new nodes, we assign them to the corresponding existing communities to keep the degree of every existing community (defined as sum of degree of nodes which belong to that community) increasing and the expected increment of the degree of community is proportional to the degree of community. Such partition can make subsequent deriving of expected modularity simple.</p><p>First we calculate <inline-formula><inline-graphic xlink:href="pone.0102799.e073.jpg"/></inline-formula>. Notice that <inline-formula><inline-graphic xlink:href="pone.0102799.e074.jpg"/></inline-formula> can be expressed as <disp-formula id="pone.0102799.e075"><graphic xlink:href="pone.0102799.e075.jpg" position="anchor" orientation="portrait"/></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e076.jpg"/></inline-formula> is community <inline-formula><inline-graphic xlink:href="pone.0102799.e077.jpg"/></inline-formula> at step <inline-formula><inline-graphic xlink:href="pone.0102799.e078.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0102799.e079.jpg"/></inline-formula> is the number of edges within network <inline-formula><inline-graphic xlink:href="pone.0102799.e080.jpg"/></inline-formula>, <inline-formula><inline-graphic xlink:href="pone.0102799.e081.jpg"/></inline-formula> is always equal to <inline-formula><inline-graphic xlink:href="pone.0102799.e082.jpg"/></inline-formula> as our algorithm processes one edge at one step. Hence <inline-formula><inline-graphic xlink:href="pone.0102799.e083.jpg"/></inline-formula> can be expressed as <disp-formula id="pone.0102799.e084"><graphic xlink:href="pone.0102799.e084.jpg" position="anchor" orientation="portrait"/><label>(4)</label></disp-formula></p><p>Then we calculate <inline-formula><inline-graphic xlink:href="pone.0102799.e085.jpg"/></inline-formula> under three cases separately as follows:</p><p><bold>Case (a)</bold>: link a new node to an existing node. Without loss of generality, we assume <inline-formula><inline-graphic xlink:href="pone.0102799.e086.jpg"/></inline-formula> is the existing node and <inline-formula><inline-graphic xlink:href="pone.0102799.e087.jpg"/></inline-formula> is the new node. We assign the new node to the same community as the existing node and have <disp-formula id="pone.0102799.e088"><graphic xlink:href="pone.0102799.e088.jpg" position="anchor" orientation="portrait"/></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e089.jpg"/></inline-formula> is the community which node <inline-formula><inline-graphic xlink:href="pone.0102799.e090.jpg"/></inline-formula> belongs to.</p><p><bold>Case (b)</bold>: link two existing nodes. We do not change the partition and have <disp-formula id="pone.0102799.e091"><graphic xlink:href="pone.0102799.e091.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p><bold>Case (c)</bold>: link two new nodes. We assign two new nodes to an existing community with probability in proportion to the degree of the existing community. Case (c)'s <inline-formula><inline-graphic xlink:href="pone.0102799.e092.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0102799.e093.jpg"/></inline-formula> are the same as case (a)'s.</p><p>Finally we calculate <inline-formula><inline-graphic xlink:href="pone.0102799.e094.jpg"/></inline-formula> by combining <inline-formula><inline-graphic xlink:href="pone.0102799.e095.jpg"/></inline-formula> under three cases together and applying it iteratively <disp-formula id="pone.0102799.e096"><graphic xlink:href="pone.0102799.e096.jpg" position="anchor" orientation="portrait"/><label>(5)</label></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e097.jpg"/></inline-formula> only depends on <inline-formula><inline-graphic xlink:href="pone.0102799.e098.jpg"/></inline-formula> and <inline-formula><inline-graphic xlink:href="pone.0102799.e099.jpg"/></inline-formula>.</p><p>As our partition keeps the degree of every existing community increasing, we have <disp-formula id="pone.0102799.e100"><graphic xlink:href="pone.0102799.e100.jpg" position="anchor" orientation="portrait"/></disp-formula>and the expected increment of the degree of community is proportional to the degree of community, thus the expected degree of community <inline-formula><inline-graphic xlink:href="pone.0102799.e101.jpg"/></inline-formula> at step <inline-formula><inline-graphic xlink:href="pone.0102799.e102.jpg"/></inline-formula> can be expressed as <disp-formula id="pone.0102799.e103"><graphic xlink:href="pone.0102799.e103.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>According to the Popoviciu inequality on variance, the variance of <inline-formula><inline-graphic xlink:href="pone.0102799.e104.jpg"/></inline-formula> has a loose upper bound <disp-formula id="pone.0102799.e105"><graphic xlink:href="pone.0102799.e105.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>So we have <disp-formula id="pone.0102799.e106"><graphic xlink:href="pone.0102799.e106.jpg" position="anchor" orientation="portrait"/></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e107.jpg"/></inline-formula> is the number of communities within network <inline-formula><inline-graphic xlink:href="pone.0102799.e108.jpg"/></inline-formula> and <disp-formula id="pone.0102799.e109"><graphic xlink:href="pone.0102799.e109.jpg" position="anchor" orientation="portrait"/><label>(6)</label></disp-formula></p><p>Now we describe the online community detection algorithm. For initial network <inline-formula><inline-graphic xlink:href="pone.0102799.e110.jpg"/></inline-formula>, it is clear that the best partition <inline-formula><inline-graphic xlink:href="pone.0102799.e111.jpg"/></inline-formula> is an empty set too. For subsequent networks <inline-formula><inline-graphic xlink:href="pone.0102799.e112.jpg"/></inline-formula>, we consider some candidate operations which update the partition. Each operation has its corresponding <inline-formula><inline-graphic xlink:href="pone.0102799.e113.jpg"/></inline-formula>. We take the operation which has the largest <inline-formula><inline-graphic xlink:href="pone.0102799.e114.jpg"/></inline-formula>. In fact, we only need to know expected modularity gain <inline-formula><inline-graphic xlink:href="pone.0102799.e115.jpg"/></inline-formula>, which is defined as <inline-formula><inline-graphic xlink:href="pone.0102799.e116.jpg"/></inline-formula> of one operation minus <inline-formula><inline-graphic xlink:href="pone.0102799.e117.jpg"/></inline-formula> of another <disp-formula id="pone.0102799.e118"><graphic xlink:href="pone.0102799.e118.jpg" position="anchor" orientation="portrait"/><label>(7)</label></disp-formula></p><p>We describe our operations under three cases separately as follows:</p><p><bold>Case (a)</bold>: link a new node to an existing node. We consider two operations: the <italic>Split</italic> operation where the new node splits as a new community, and the <italic>Join</italic> operation where the new node joins the same community as the existing node (See <xref ref-type="fig" rid="pone-0102799-g002">Fig. 2</xref>). Without loss of generality, we assume <inline-formula><inline-graphic xlink:href="pone.0102799.e119.jpg"/></inline-formula> is the existing node and <inline-formula><inline-graphic xlink:href="pone.0102799.e120.jpg"/></inline-formula> is the new node.</p><fig id="pone-0102799-g002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g002</object-id><label>Figure 2</label><caption><title>Two operations to process a new edge linking a new node to an existing node.</title><p>(a) A new node attaches to an existing node with degree two, it joins the same community as the existing node; (b) Another new node attaches to the previous new node with degree one, it splits as a new community.</p></caption><graphic xlink:href="pone.0102799.g002"/></fig><p>For the <italic>Split</italic> operation, we have <disp-formula id="pone.0102799.e121"><graphic xlink:href="pone.0102799.e121.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>The existing community <inline-formula><inline-graphic xlink:href="pone.0102799.e122.jpg"/></inline-formula> has degree <inline-formula><inline-graphic xlink:href="pone.0102799.e123.jpg"/></inline-formula> and the new community <inline-formula><inline-graphic xlink:href="pone.0102799.e124.jpg"/></inline-formula> has degree <inline-formula><inline-graphic xlink:href="pone.0102799.e125.jpg"/></inline-formula> at step <inline-formula><inline-graphic xlink:href="pone.0102799.e126.jpg"/></inline-formula>.</p><p>For the <italic>Join</italic> operation, we have <disp-formula id="pone.0102799.e127"><graphic xlink:href="pone.0102799.e127.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>The existing community <inline-formula><inline-graphic xlink:href="pone.0102799.e128.jpg"/></inline-formula> has degree <inline-formula><inline-graphic xlink:href="pone.0102799.e129.jpg"/></inline-formula> at step <inline-formula><inline-graphic xlink:href="pone.0102799.e130.jpg"/></inline-formula>.</p><p>Then we have <disp-formula id="pone.0102799.e131"><graphic xlink:href="pone.0102799.e131.jpg" position="anchor" orientation="portrait"/></disp-formula>and <disp-formula id="pone.0102799.e132"><graphic xlink:href="pone.0102799.e132.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>We estimate <inline-formula><inline-graphic xlink:href="pone.0102799.e133.jpg"/></inline-formula> by observed frequency of case (b). Taking together and omitting the error term, we can obtain <inline-formula><inline-graphic xlink:href="pone.0102799.e134.jpg"/></inline-formula>, and take the <italic>Split</italic> operation if it is positive or the <italic>Join</italic> operation otherwise.</p><p><bold>Case (b)</bold>: link two existing nodes, two existing nodes may or may not belong to the same community (See <xref ref-type="fig" rid="pone-0102799-g003">Fig. 3</xref>). If both nodes belong to the same community, it is hard to propose a suitable candidate operation. So, we take the <italic>Dense</italic> operation where we keep current partition unchanged. Otherwise we consider two operations: (1) the <italic>Move</italic> operation where we move one node from its community to another node's community; (2) the <italic>Keep</italic> operation where we keep the current partition unchanged. Without loss of generality, we assume <inline-formula><inline-graphic xlink:href="pone.0102799.e135.jpg"/></inline-formula> is the moving node and have <disp-formula id="pone.0102799.e136"><graphic xlink:href="pone.0102799.e136.jpg" position="anchor" orientation="portrait"/></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e137.jpg"/></inline-formula> is number of edges from the node <inline-formula><inline-graphic xlink:href="pone.0102799.e138.jpg"/></inline-formula> to the community <inline-formula><inline-graphic xlink:href="pone.0102799.e139.jpg"/></inline-formula> at step <inline-formula><inline-graphic xlink:href="pone.0102799.e140.jpg"/></inline-formula> and <disp-formula id="pone.0102799.e141"><graphic xlink:href="pone.0102799.e141.jpg" position="anchor" orientation="portrait"/></disp-formula></p><fig id="pone-0102799-g003" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g003</object-id><label>Figure 3</label><caption><title>Two situations of a new edge linking two existing nodes.</title><p>(a) Nodes belong to a same community; (b) Nodes belong to different communities.</p></caption><graphic xlink:href="pone.0102799.g003"/></fig><p>Therefore, we obtain <inline-formula><inline-graphic xlink:href="pone.0102799.e142.jpg"/></inline-formula> and determine the operation in the same way as we do in case (a).</p><p><bold>Case (c)</bold>: link two new nodes, we consider two operations: the <italic>New</italic> operation where we assign two new nodes to a new community and the <italic>Merge</italic> operation where we assign them to an existing community. We have <disp-formula id="pone.0102799.e143"><graphic xlink:href="pone.0102799.e143.jpg" position="anchor" orientation="portrait"/></disp-formula>where <inline-formula><inline-graphic xlink:href="pone.0102799.e144.jpg"/></inline-formula> is the existing community and <disp-formula id="pone.0102799.e145"><graphic xlink:href="pone.0102799.e145.jpg" position="anchor" orientation="portrait"/></disp-formula></p><p>Notice that <inline-formula><inline-graphic xlink:href="pone.0102799.e146.jpg"/></inline-formula> is almost always positive for large complex networks. So we take the <italic>New</italic> operation for case (c) to reduce complexity.</p><p>In summary, our algorithm takes a sequence of edges as input and optimizes expected modularity at each step. We assign node to community according to the maximum expected modularity gain principle. If only one node of the current edge belongs to the existing network, we split another node to a new community if this operation can maximize expected modularity gain, otherwise we let it join the same community as the existing node; if both nodes of current edge belong to the existing network but they belong to different communities, we move one node according to the same principle; if neither node of current edge belongs to the existing network, we just assign them to a new community. Obviously, our algorithm has <inline-formula><inline-graphic xlink:href="pone.0102799.e147.jpg"/></inline-formula> time complexity. The space complexity is <inline-formula><inline-graphic xlink:href="pone.0102799.e148.jpg"/></inline-formula> because we need to store <inline-formula><inline-graphic xlink:href="pone.0102799.e149.jpg"/></inline-formula> for calculating expected modularity gain in constant time. Our algorithm has two major advantages: (1) the update only uses knowledge about network's local structure related to the new edge; (2) the update can be done in constant time. Thus it can efficiently process large networks in real time.</p></sec></sec><sec id="s3"><title>Results</title><p>In this section, we present the experimental results of our online community detection algorithm and compare it with a state-of-the-art algorithm, Louvain algorithm, proposed by Blondel <italic>et al.</italic>
<xref rid="pone.0102799-Blondel1" ref-type="bibr">[39]</xref>. For simplicity, we use <italic>OLEM</italic> to refer to our algorithm, <italic>OLTM</italic> to refer to a simplified version of our algorithm which greedily optimizes temporal modularity <inline-formula><inline-graphic xlink:href="pone.0102799.e150.jpg"/></inline-formula> (See Eq.(4)) instead of expected modularity <inline-formula><inline-graphic xlink:href="pone.0102799.e151.jpg"/></inline-formula> (See Eq.(6)), and <italic>Louvain</italic> to refer to the Louvain algorithm.</p><p>The experiments use 11 public real-world large network data sets from Stanford Large Network Dataset Collection (<ext-link ext-link-type="uri" xlink:href="http://snap.stanford.edu/data/">http://snap.stanford.edu/data/</ext-link>), which are commonly used by researchers. Their number of nodes varies from 12,008 to 2,394,385 and their number of edges varies from 93,439 to 4,659,565 (See <xref ref-type="table" rid="pone-0102799-t001">Table 1</xref>). These data sets are</p><table-wrap id="pone-0102799-t001" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t001</object-id><label>Table 1</label><caption><title>Summary of network data sets.</title></caption><alternatives><graphic id="pone-0102799-t001-1" xlink:href="pone.0102799.t001"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1">Number of nodes</td><td align="left" rowspan="1" colspan="1">Number of edges</td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">ca-CondMat</td><td align="left" rowspan="1" colspan="1">23,133</td><td align="left" rowspan="1" colspan="1">93,439</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-HepPh</td><td align="left" rowspan="1" colspan="1">12,008</td><td align="left" rowspan="1" colspan="1">118,489</td></tr><tr><td align="left" rowspan="1" colspan="1">email-Enron</td><td align="left" rowspan="1" colspan="1">36,692</td><td align="left" rowspan="1" colspan="1">183,831</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-AstroPh</td><td align="left" rowspan="1" colspan="1">18,772</td><td align="left" rowspan="1" colspan="1">198,050</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepTh</td><td align="left" rowspan="1" colspan="1">27,770</td><td align="left" rowspan="1" colspan="1">352,285</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepPh</td><td align="left" rowspan="1" colspan="1">34,546</td><td align="left" rowspan="1" colspan="1">420,877</td></tr><tr><td align="left" rowspan="1" colspan="1">com-Amazon</td><td align="left" rowspan="1" colspan="1">334,863</td><td align="left" rowspan="1" colspan="1">925,872</td></tr><tr><td align="left" rowspan="1" colspan="1">com-DBLP</td><td align="left" rowspan="1" colspan="1">317,080</td><td align="left" rowspan="1" colspan="1">1,049,866</td></tr><tr><td align="left" rowspan="1" colspan="1">web-Stanford</td><td align="left" rowspan="1" colspan="1">281,903</td><td align="left" rowspan="1" colspan="1">1,992,636</td></tr><tr><td align="left" rowspan="1" colspan="1">Amazon0601</td><td align="left" rowspan="1" colspan="1">403,394</td><td align="left" rowspan="1" colspan="1">2,443,408</td></tr><tr><td align="left" rowspan="1" colspan="1">WikiTalk</td><td align="left" rowspan="1" colspan="1">2,394,385</td><td align="left" rowspan="1" colspan="1">4,659,565</td></tr></tbody></table></alternatives></table-wrap><p>&#x02022; <bold>ca-CondMat</bold>: Collaboration network of Arxiv Condensed Matter <xref rid="pone.0102799-Leskovec2" ref-type="bibr">[40]</xref>;</p><p>&#x02022; <bold>ca-HepPh</bold>: Collaboration network of Arxiv High Energy Physics <xref rid="pone.0102799-Leskovec2" ref-type="bibr">[40]</xref>;</p><p>&#x02022; <bold>email-Enron</bold>: Email communication network from Enron <xref rid="pone.0102799-Leskovec3" ref-type="bibr">[41]</xref>;</p><p>&#x02022; <bold>ca-AstroPh</bold>: Collaboration network of Arxiv Astro Physics <xref rid="pone.0102799-Leskovec2" ref-type="bibr">[40]</xref>;</p><p>&#x02022; <bold>cit-HepTh</bold>: Arxiv High Energy Physics paper citation network <xref rid="pone.0102799-Leskovec4" ref-type="bibr">[42]</xref>;</p><p>&#x02022; <bold>cit-HepPh</bold>: Arxiv High Energy Physics paper citation network <xref rid="pone.0102799-Leskovec2" ref-type="bibr">[40]</xref>;</p><p>&#x02022; <bold>com-Amazon</bold>: Amazon product network with labeled community structure <xref rid="pone.0102799-Yang1" ref-type="bibr">[43]</xref>;</p><p>&#x02022; <bold>com-DBLP</bold>: DBLP collaboration network with labeled community structure <xref rid="pone.0102799-Yang1" ref-type="bibr">[43]</xref>;</p><p>&#x02022; <bold>web-Stanford</bold>: Web graph of Stanford.edu <xref rid="pone.0102799-Leskovec3" ref-type="bibr">[41]</xref>;</p><p>&#x02022; <bold>Amazon0601</bold>: Amazon product co-purchasing network from June 1 2003 <xref rid="pone.0102799-Leskovec5" ref-type="bibr">[44]</xref>;</p><p>&#x02022; <bold>WikiTalk</bold>: Wikipedia talk (communication) network <xref rid="pone.0102799-Leskovec6" ref-type="bibr">[45]</xref>.</p><p>The edges should be processed in the same order as expanding procedure of the networks. However, those data sets do not have timestamps on the edges. In the experiments, we process the edges in order of their appearance in the raw files.</p><p>We use C# to implement our algorithms (Our C# implementation can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.cs.zju.edu.cn/~gpan/code/pone2013.zip">http://www.cs.zju.edu.cn/~gpan/code/pone2013.zip</ext-link>). For comparison, we employ the C implementation of the Louvain algorithm provided by the authors (<ext-link ext-link-type="uri" xlink:href="https://sites.google.com/site/findcommunities/">https://sites.google.com/site/findcommunities/</ext-link>). We carry out experiments on a Windows based Genuine Intel (R) CPU i7 @ 2.70 GHz machine with 4.00 GB memory.</p><p>Modularity and average running time (in seconds) over 10 runs by <italic>OLEM</italic>, <italic>OLTM</italic>, and <italic>Louvain</italic> are reported in <xref ref-type="table" rid="pone-0102799-t002">Table 2</xref> and <xref ref-type="table" rid="pone-0102799-t003">Table 3</xref>. The evolution of temporal modularity over time by <italic>OLEM</italic> and <italic>OLTM</italic> is shown in <xref ref-type="fig" rid="pone-0102799-g004">Fig. 4</xref>.</p><fig id="pone-0102799-g004" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g004</object-id><label>Figure 4</label><caption><title>The evolution of temporal modularity over time by <italic>OLEM</italic> and <italic>OLTM</italic>.</title></caption><graphic xlink:href="pone.0102799.g004"/></fig><table-wrap id="pone-0102799-t002" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t002</object-id><label>Table 2</label><caption><title>Modularity by three community detection algorithms.</title></caption><alternatives><graphic id="pone-0102799-t002-2" xlink:href="pone.0102799.t002"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1"><italic>OLEM</italic></td><td align="left" rowspan="1" colspan="1"><italic>OLTM</italic></td><td align="left" rowspan="1" colspan="1"><italic>Louvain</italic></td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">ca-CondMat</td><td align="left" rowspan="1" colspan="1">0.6446</td><td align="left" rowspan="1" colspan="1">0.6585</td><td align="left" rowspan="1" colspan="1">0.7288</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-HepPh</td><td align="left" rowspan="1" colspan="1">0.5734</td><td align="left" rowspan="1" colspan="1">0.6052</td><td align="left" rowspan="1" colspan="1">0.6549</td></tr><tr><td align="left" rowspan="1" colspan="1">email-Enron</td><td align="left" rowspan="1" colspan="1">0.5447</td><td align="left" rowspan="1" colspan="1">0.0464</td><td align="left" rowspan="1" colspan="1">0.5876</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-AstroPh</td><td align="left" rowspan="1" colspan="1">0.5418</td><td align="left" rowspan="1" colspan="1">0.5523</td><td align="left" rowspan="1" colspan="1">0.6149</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepTh</td><td align="left" rowspan="1" colspan="1">0.5885</td><td align="left" rowspan="1" colspan="1">0.6146</td><td align="left" rowspan="1" colspan="1">0.6571</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepPh</td><td align="left" rowspan="1" colspan="1">0.6278</td><td align="left" rowspan="1" colspan="1">0.6771</td><td align="left" rowspan="1" colspan="1">0.7228</td></tr><tr><td align="left" rowspan="1" colspan="1">com-Amazon</td><td align="left" rowspan="1" colspan="1">0.7050</td><td align="left" rowspan="1" colspan="1">0.7057</td><td align="left" rowspan="1" colspan="1">0.9256</td></tr><tr><td align="left" rowspan="1" colspan="1">com-DBLP</td><td align="left" rowspan="1" colspan="1">0.7252</td><td align="left" rowspan="1" colspan="1">0.7335</td><td align="left" rowspan="1" colspan="1">0.8091</td></tr><tr><td align="left" rowspan="1" colspan="1">web-Stanford</td><td align="left" rowspan="1" colspan="1">0.8377</td><td align="left" rowspan="1" colspan="1">0.8702</td><td align="left" rowspan="1" colspan="1">0.9256</td></tr><tr><td align="left" rowspan="1" colspan="1">Amazon0601</td><td align="left" rowspan="1" colspan="1">0.7785</td><td align="left" rowspan="1" colspan="1">0.4533</td><td align="left" rowspan="1" colspan="1">0.8670</td></tr><tr><td align="left" rowspan="1" colspan="1">WikiTalk</td><td align="left" rowspan="1" colspan="1">0.5344</td><td align="left" rowspan="1" colspan="1">0.0897</td><td align="left" rowspan="1" colspan="1">0.5831</td></tr></tbody></table></alternatives></table-wrap><table-wrap id="pone-0102799-t003" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t003</object-id><label>Table 3</label><caption><title>Average running time (in seconds) over 10 runs by three community detection algorithms.</title></caption><alternatives><graphic id="pone-0102799-t003-3" xlink:href="pone.0102799.t003"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1"><italic>OLEM</italic></td><td align="left" rowspan="1" colspan="1"><italic>OLTM</italic></td><td align="left" rowspan="1" colspan="1"><italic>Louvain</italic></td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">ca-CondMat</td><td align="left" rowspan="1" colspan="1">0.3120</td><td align="left" rowspan="1" colspan="1">0.2683</td><td align="left" rowspan="1" colspan="1">0.5029</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-HepPh</td><td align="left" rowspan="1" colspan="1">0.3344</td><td align="left" rowspan="1" colspan="1">0.2387</td><td align="left" rowspan="1" colspan="1">0.3872</td></tr><tr><td align="left" rowspan="1" colspan="1">email-Enron</td><td align="left" rowspan="1" colspan="1">0.6396</td><td align="left" rowspan="1" colspan="1">0.4040</td><td align="left" rowspan="1" colspan="1">0.7004</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-AstroPh</td><td align="left" rowspan="1" colspan="1">0.6334</td><td align="left" rowspan="1" colspan="1">0.5257</td><td align="left" rowspan="1" colspan="1">0.5806</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepTh</td><td align="left" rowspan="1" colspan="1">1.0972</td><td align="left" rowspan="1" colspan="1">0.8502</td><td align="left" rowspan="1" colspan="1">1.0353</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepPh</td><td align="left" rowspan="1" colspan="1">1.3736</td><td align="left" rowspan="1" colspan="1">1.1576</td><td align="left" rowspan="1" colspan="1">1.1707</td></tr><tr><td align="left" rowspan="1" colspan="1">com-Amazon</td><td align="left" rowspan="1" colspan="1">5.0592</td><td align="left" rowspan="1" colspan="1">4.7429</td><td align="left" rowspan="1" colspan="1">6.6453</td></tr><tr><td align="left" rowspan="1" colspan="1">com-DBLP</td><td align="left" rowspan="1" colspan="1">4.6914</td><td align="left" rowspan="1" colspan="1">4.3096</td><td align="left" rowspan="1" colspan="1">6.9377</td></tr><tr><td align="left" rowspan="1" colspan="1">web-Stanford</td><td align="left" rowspan="1" colspan="1">5.8879</td><td align="left" rowspan="1" colspan="1">5.1023</td><td align="left" rowspan="1" colspan="1">32.0137</td></tr><tr><td align="left" rowspan="1" colspan="1">Amazon0601</td><td align="left" rowspan="1" colspan="1">9.8601</td><td align="left" rowspan="1" colspan="1">8.1857</td><td align="left" rowspan="1" colspan="1">12.7132</td></tr><tr><td align="left" rowspan="1" colspan="1">WikiTalk</td><td align="left" rowspan="1" colspan="1">25.0043</td><td align="left" rowspan="1" colspan="1">17.6910</td><td align="left" rowspan="1" colspan="1">27.0956</td></tr></tbody></table></alternatives></table-wrap><p>We can see that <italic>OLTM</italic> is faster than <italic>Louvain</italic> in all data sets and <italic>OLEM</italic> is faster than <italic>Louvain</italic> in many data sets except ca-AstroPh, cit-HepTh and cit-HepPh. With the modularity measure, <italic>OLEM</italic> and <italic>OLTM</italic> cannot achieve similar performance to <italic>Louvain</italic>. This is due to our algorithms being online one-pass algorithms while <italic>Louvain</italic> is an offline multi-pass algorithm. Our algorithms' running times are linear in number of edges as we expected while <italic>Louvain</italic> is not. This is due to the number of passes of <italic>Louvain</italic> is not fixed. Most of all, <italic>Louvain</italic> needs to start from the beginning when a new edge is added while our algorithms do not.</p><p><italic>OLTM</italic> is faster than <italic>OLEM</italic> because <inline-formula><inline-graphic xlink:href="pone.0102799.e152.jpg"/></inline-formula> is simpler than <inline-formula><inline-graphic xlink:href="pone.0102799.e153.jpg"/></inline-formula>. In fact, we calculate <inline-formula><inline-graphic xlink:href="pone.0102799.e154.jpg"/></inline-formula> instead of <inline-formula><inline-graphic xlink:href="pone.0102799.e155.jpg"/></inline-formula> in our implementation as the former only involves integer arithmetic which is faster than float-point arithmetic. <italic>OLEM</italic> keeps relatively stable performance in all data sets while <italic>OLTM</italic> has exceptionally poor performance in the email-Enron and WikiTalk data sets. We will further investigate the underlying cause for <italic>OLTM</italic> later. <italic>OLTM</italic> often performs slightly better than <italic>OLEM</italic> in the other data sets. It may be due to our approximation of expected modularity by a lower bound in <italic>OLEM</italic>.</p><p>As we mentioned in the <xref ref-type="sec" rid="s1">Introduction</xref> Section, the modularity optimization based approach may fail to identify communities smaller than a scale, which is called a resolution limit problem <xref rid="pone.0102799-Fortunato2" ref-type="bibr">[17]</xref>. To investigate this problem, we compare results of <italic>OLEM</italic>, <italic>OLTM</italic> and <italic>Louvain</italic> in the com-Amazon and com-DBLP data sets. We choose the two data sets because Yang <italic>et al.</italic>
<xref rid="pone.0102799-Yang1" ref-type="bibr">[43]</xref> released a labeled community structure for either of the data sets (<ext-link ext-link-type="uri" xlink:href="http://snap.stanford.edu/data/com-Amazon.html">http://snap.stanford.edu/data/com-Amazon.html</ext-link>, <ext-link ext-link-type="uri" xlink:href="http://snap.stanford.edu/data/com-DBLP.html">http://snap.stanford.edu/data/com-DBLP.html</ext-link>). For com-Amazon data set, Yang <italic>et al.</italic> labeled products from the same category as a community and nodes (products) that belong to a common community share a common function or purpose. For com-DBLP data set, they labeled authors who published to a certain journal or conference as a community and nodes (authors) that belong to a common community share a comon research interest. For each data set, we use the top 5,000 subset, same as <xref rid="pone.0102799-Yang1" ref-type="bibr">[43]</xref>, for comparison.</p><p>We find that, although both our method and the <italic>Louvain</italic> method optimize the modularity function, the number of communities in <italic>Louvain</italic>'s result is less than that in our results (See <xref ref-type="table" rid="pone-0102799-t004">Table 4</xref>). It is due to our method and the <italic>Louvain</italic> method achieving optimization in different ways. The <italic>Louvain</italic> method optimizes the modularity function by merging pair of communities in each pass, while our method optimizes the modularity function by moving nodes of the new edge at each step in order to satisfy the real-time processing. Generally speaking, merging communities may obtain higher modularity gain than moving nodes, so the <italic>Louvain</italic> method is better than our method to optimize the modularity. However, merging communities in each pass will reduce the number of communities in final result as each merging operation will eliminate one community. It causes that the <italic>Louvain</italic> method will miss small communities.</p><table-wrap id="pone-0102799-t004" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t004</object-id><label>Table 4</label><caption><title>Number of communities by three community detection algorithms and Yang's labeled community structure.</title></caption><alternatives><graphic id="pone-0102799-t004-4" xlink:href="pone.0102799.t004"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1"><italic>OLEM</italic></td><td align="left" rowspan="1" colspan="1"><italic>OLTM</italic></td><td align="left" rowspan="1" colspan="1"><italic>Louvain</italic></td><td align="left" rowspan="1" colspan="1"><italic>Labeled</italic></td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Amazon</td><td align="left" rowspan="1" colspan="1">1,988</td><td align="left" rowspan="1" colspan="1">1,979</td><td align="left" rowspan="1" colspan="1">217</td><td align="left" rowspan="1" colspan="1">5,000</td></tr><tr><td align="left" rowspan="1" colspan="1">DBLP</td><td align="left" rowspan="1" colspan="1">4,122</td><td align="left" rowspan="1" colspan="1">3,854</td><td align="left" rowspan="1" colspan="1">301</td><td align="left" rowspan="1" colspan="1">5,000</td></tr></tbody></table></alternatives></table-wrap><p>Further, the similarity between the results and labeled community structures can be measured by NMI (Normalized Mutual Information) criterion <xref rid="pone.0102799-Lancichinetti2" ref-type="bibr">[46]</xref>. We find that, measured in NMI, our results are more similar to labeled community structure than <italic>Louvain</italic>'s result (See <xref ref-type="table" rid="pone-0102799-t005">Table 5</xref>). The main reason may be that our methods can find more communities of small scale, which the <italic>Louvain</italic> method may be hard to identify.</p><table-wrap id="pone-0102799-t005" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t005</object-id><label>Table 5</label><caption><title>NMI Benchmark by three community detection algorithms comparing with Yang's labeled community structure.</title></caption><alternatives><graphic id="pone-0102799-t005-5" xlink:href="pone.0102799.t005"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1"><italic>OLEM</italic></td><td align="left" rowspan="1" colspan="1"><italic>OLTM</italic></td><td align="left" rowspan="1" colspan="1"><italic>Louvain</italic></td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">Amazon</td><td align="left" rowspan="1" colspan="1">0.7261</td><td align="left" rowspan="1" colspan="1">0.7273</td><td align="left" rowspan="1" colspan="1">0.3118</td></tr><tr><td align="left" rowspan="1" colspan="1">DBLP</td><td align="left" rowspan="1" colspan="1">0.2355</td><td align="left" rowspan="1" colspan="1">0.2376</td><td align="left" rowspan="1" colspan="1">0.1958</td></tr></tbody></table></alternatives></table-wrap><p>The reason for <italic>OLTM</italic>'s poor performance in the email-Enron and WikiTalk data sets is that <italic>OLTM</italic> has no <italic>Split</italic> operation for case (b) edge. As <italic>OLTM</italic> is a greedy approach, it only takes the <italic>Join</italic> operation for case (b) edge to maximize temporal modularity. Hence the only way for <italic>OLTM</italic> to create new community is its <italic>New</italic> operation for case (c) edge. If a data set has few case (c) edges at its beginning, <italic>OLTM</italic> cannot create enough communities in the early stage and obtains a poor final partition. In the worst situation, the data set has no case (c) edge and <italic>OLTM</italic> fails. In fact, email-Enron and WikiTalk data sets have very few case (c) edges at their beginning, comparing with the other data sets.</p><p>In contrast, with the help of expected modularity, <italic>OLEM</italic> can take the <italic>Split</italic> operation for case (b) edge. Hence it can create enough communities in the early stage and obtains an acceptable final partition in email-Enron and WikiTalk data sets.</p><p>To compare <italic>OLTM</italic> and <italic>OLEM</italic>'s operations, we plot the percentage of different operations of <italic>OLTM</italic> and <italic>OLEM</italic> over time in <xref ref-type="fig" rid="pone-0102799-g005">Fig. 5</xref> and <xref ref-type="fig" rid="pone-0102799-g006">6</xref>. We can see that <italic>OLTM</italic> generally only takes the <italic>Join</italic> and <italic>Dense</italic> operations until very later stage while <italic>OLEM</italic> takes many <italic>Split</italic> operations in the early stage in the email-Enron and WikiTalk data sets. Therefore, <italic>OLEM</italic>'s temporal modularity increases steadily over time while <italic>OLTM</italic>'s temporal modularity remains zero until very later stages in email-Enron and WikiTalk data sets (See <xref ref-type="fig" rid="pone-0102799-g004">Fig. 4</xref>). In fact, <italic>OLEM</italic> can obtain an acceptable modularity even in early stage for the email-Enron and WikiTalk data sets.</p><fig id="pone-0102799-g005" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g005</object-id><label>Figure 5</label><caption><title>The percentage of different operations of <italic>OLTM</italic> over time.</title><p>The height of each color segment represents the percentage of an operation at a certain progress. &#x0201c;Op&#x0201d; is the abbreviation for &#x0201c;Operation&#x0201d; of <italic>OLTM</italic> at each step.</p></caption><graphic xlink:href="pone.0102799.g005"/></fig><fig id="pone-0102799-g006" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.g006</object-id><label>Figure 6</label><caption><title>The percentage of different operations of <italic>OLEM</italic> over time.</title><p>The height of each color segment represents the percentage of an operation at a certain progress. &#x0201c;Op&#x0201d; is the abbreviation for &#x0201c;Operation&#x0201d; of <italic>OLEM</italic> at each step.</p></caption><graphic xlink:href="pone.0102799.g006"/></fig><p>As a statistical analysis, we created 10 copies of each original data set with the edges randomly reordered and ran our algorithm on those reordered data sets. The statistics of modularity in those reordered data sets as well as modularity in original data set are reported in <xref ref-type="table" rid="pone-0102799-t006">Table 6</xref>. Modularity in original data set is significantly better than those in reordered data sets for ca-CondMat, email-Enron, com-Amazon, com-DBLP, web-Stanford, and Amazon0601. We guess, for these six data sets, the storing order of edges may be close to the order of their expanding. For the other data sets, modularity difference between the original and reordered is slight. We think the edges may be not stored by their creation time in those data sets.</p><table-wrap id="pone-0102799-t006" orientation="portrait" position="float"><object-id pub-id-type="doi">10.1371/journal.pone.0102799.t006</object-id><label>Table 6</label><caption><title>The statistics of modularity on 10 reordered data sets as well as modularity on original data set by our algorithm.</title></caption><alternatives><graphic id="pone-0102799-t006-6" xlink:href="pone.0102799.t006"/><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/><col align="center" span="1"/></colgroup><thead><tr><td align="left" rowspan="1" colspan="1">Data set</td><td align="left" rowspan="1" colspan="1">q(Original)</td><td align="left" rowspan="1" colspan="1">AVG(q)</td><td align="left" rowspan="1" colspan="1">MAX(q)</td><td align="left" rowspan="1" colspan="1">MIN(q)</td></tr></thead><tbody><tr><td align="left" rowspan="1" colspan="1">ca-CondMat</td><td align="left" rowspan="1" colspan="1">0.6446</td><td align="left" rowspan="1" colspan="1">0.5344</td><td align="left" rowspan="1" colspan="1">0.5375</td><td align="left" rowspan="1" colspan="1">0.5298</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-HepPh</td><td align="left" rowspan="1" colspan="1">0.5734</td><td align="left" rowspan="1" colspan="1">0.5844</td><td align="left" rowspan="1" colspan="1">0.5872</td><td align="left" rowspan="1" colspan="1">0.5823</td></tr><tr><td align="left" rowspan="1" colspan="1">email-Enron</td><td align="left" rowspan="1" colspan="1">0.5447</td><td align="left" rowspan="1" colspan="1">0.4730</td><td align="left" rowspan="1" colspan="1">0.4872</td><td align="left" rowspan="1" colspan="1">0.4541</td></tr><tr><td align="left" rowspan="1" colspan="1">ca-AstroPh</td><td align="left" rowspan="1" colspan="1">0.5418</td><td align="left" rowspan="1" colspan="1">0.5468</td><td align="left" rowspan="1" colspan="1">0.5536</td><td align="left" rowspan="1" colspan="1">0.5427</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepTh</td><td align="left" rowspan="1" colspan="1">0.5885</td><td align="left" rowspan="1" colspan="1">0.5777</td><td align="left" rowspan="1" colspan="1">0.5873</td><td align="left" rowspan="1" colspan="1">0.5588</td></tr><tr><td align="left" rowspan="1" colspan="1">cit-HepPh</td><td align="left" rowspan="1" colspan="1">0.6278</td><td align="left" rowspan="1" colspan="1">0.6376</td><td align="left" rowspan="1" colspan="1">0.6524</td><td align="left" rowspan="1" colspan="1">0.6288</td></tr><tr><td align="left" rowspan="1" colspan="1">com-Amazon</td><td align="left" rowspan="1" colspan="1">0.7050</td><td align="left" rowspan="1" colspan="1">0.5903</td><td align="left" rowspan="1" colspan="1">0.5916</td><td align="left" rowspan="1" colspan="1">0.5895</td></tr><tr><td align="left" rowspan="1" colspan="1">com-DBLP</td><td align="left" rowspan="1" colspan="1">0.7252</td><td align="left" rowspan="1" colspan="1">0.5706</td><td align="left" rowspan="1" colspan="1">0.5715</td><td align="left" rowspan="1" colspan="1">0.5694</td></tr><tr><td align="left" rowspan="1" colspan="1">web-Stanford</td><td align="left" rowspan="1" colspan="1">0.8377</td><td align="left" rowspan="1" colspan="1">0.7431</td><td align="left" rowspan="1" colspan="1">0.7501</td><td align="left" rowspan="1" colspan="1">0.7385</td></tr><tr><td align="left" rowspan="1" colspan="1">Amazon0601</td><td align="left" rowspan="1" colspan="1">0.7785</td><td align="left" rowspan="1" colspan="1">0.5682</td><td align="left" rowspan="1" colspan="1">0.5708</td><td align="left" rowspan="1" colspan="1">0.5647</td></tr><tr><td align="left" rowspan="1" colspan="1">WikiTalk</td><td align="left" rowspan="1" colspan="1">0.5344</td><td align="left" rowspan="1" colspan="1">0.5102</td><td align="left" rowspan="1" colspan="1">0.5104</td><td align="left" rowspan="1" colspan="1">0.5101</td></tr></tbody></table></alternatives></table-wrap></sec><sec id="s4"><title>Conclusions</title><p>In this paper we have examined the problem of online community detection for large complex networks in which new edges continually appear while old edges do not disappear. We have formulated it as a modularity optimization problem. We have proposed a generative model for complex networks and developed an online algorithm with linear time complexity. Our algorithm processes a network edge by edge in the order that the network is fed to the algorithm. It does not optimize modularity but expected modularity to avoid poor performance. The two major advantages of our algorithm are (1) the update only uses knowledge about network's local structure related to the new edge; (2) the update can be done in constant time. Our algorithm can efficiently process large networks in real time. The algorithm has been applied to 11 public real-world large network data sets and our experiments give very encouraging results. Not only is the proposed algorithm scalable in terms of both time and space complexity, but it also gives comparable performance. Our future research will consider (1) combining <italic>OLTM</italic> and <italic>OLEM</italic> into a better one; (2) improving the generative model to allow edge to appear and disappear in general probability distribution; (3) exploring how to apply our method to other objective functions.</p></sec></body><back><ref-list><title>References</title><ref id="pone.0102799-Rubinov1"><label>1</label><mixed-citation publication-type="journal"><name><surname>Rubinov</surname><given-names>M</given-names></name>, <name><surname>Sporns</surname><given-names>O</given-names></name> (<year>2010</year>) <article-title>Complex network measures of brain connectivity: Uses and interpretations</article-title>. <source>NeuroImage</source><volume>52</volume>: <fpage>1059</fpage>&#x02013;<lpage>1069</lpage><pub-id pub-id-type="pmid">19819337</pub-id></mixed-citation></ref><ref id="pone.0102799-Barrat1"><label>2</label><mixed-citation publication-type="journal"><name><surname>Barrat</surname><given-names>A</given-names></name>, <name><surname>Barthelemy</surname><given-names>M</given-names></name>, <name><surname>Pastor-Satorras</surname><given-names>R</given-names></name>, <name><surname>Vespignani</surname><given-names>A</given-names></name> (<year>2004</year>) <article-title>The architecture of complex weighted networks</article-title>. <source>Proceedings of the National Academy of Sciences</source><volume>101</volume>: <fpage>3747</fpage>&#x02013;<lpage>3752</lpage></mixed-citation></ref><ref id="pone.0102799-Phithakkitnukoon1"><label>3</label><mixed-citation publication-type="other">Phithakkitnukoon S, Calabrese F, Smoreda Z, Ratti C (2011) Out of sight out of mind&#x02013;how our mobile social network changes during migration. In: Proceedings of the Third International Conference on Social Computing. pp. 515&#x02013;520.</mixed-citation></ref><ref id="pone.0102799-Fan1"><label>4</label><mixed-citation publication-type="journal"><name><surname>Fan</surname><given-names>M</given-names></name>, <name><surname>Wong</surname><given-names>KC</given-names></name>, <name><surname>Ryu</surname><given-names>T</given-names></name>, <name><surname>Ravasi</surname><given-names>T</given-names></name>, <name><surname>Gao</surname><given-names>X</given-names></name> (<year>2012</year>) <article-title>Secom: A novel hash seed and community detection based-approach for genome-scale protein domain identification</article-title>. <source>PLoS ONE</source><volume>7</volume>: <fpage>e39475</fpage><pub-id pub-id-type="pmid">22761802</pub-id></mixed-citation></ref><ref id="pone.0102799-Ratti1"><label>5</label><mixed-citation publication-type="journal"><name><surname>Ratti</surname><given-names>C</given-names></name>, <name><surname>Sobolevsky</surname><given-names>S</given-names></name>, <name><surname>Calabrese</surname><given-names>F</given-names></name>, <name><surname>Andris</surname><given-names>C</given-names></name>, <name><surname>Reades</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2010</year>) <article-title>Redrawing the map of great britain from a network of human interactions</article-title>. <source>PLoS One</source><volume>5</volume>: <fpage>e14248</fpage><pub-id pub-id-type="pmid">21170390</pub-id></mixed-citation></ref><ref id="pone.0102799-Tang1"><label>6</label><mixed-citation publication-type="journal"><name><surname>Tang</surname><given-names>C</given-names></name>, <name><surname>Li</surname><given-names>X</given-names></name>, <name><surname>Cao</surname><given-names>L</given-names></name>, <name><surname>Zhan</surname><given-names>J</given-names></name> (<year>2012</year>) <article-title>The law of evolutionary dynamics in community-structured population</article-title>. <source>Journal of Theoretical Biology</source><volume>306</volume>: <fpage>1</fpage>&#x02013;<lpage>6</lpage><pub-id pub-id-type="pmid">22554982</pub-id></mixed-citation></ref><ref id="pone.0102799-Porter1"><label>7</label><mixed-citation publication-type="journal"><name><surname>Porter</surname><given-names>MA</given-names></name>, <name><surname>Onnela</surname><given-names>JP</given-names></name>, <name><surname>Mucha</surname><given-names>PJ</given-names></name> (<year>2009</year>) <article-title>Communities in networks</article-title>. <source>Notices of the American Mathematical Society</source><volume>56</volume>: <fpage>1082</fpage>&#x02013;<lpage>1097</lpage></mixed-citation></ref><ref id="pone.0102799-Fortunato1"><label>8</label><mixed-citation publication-type="journal"><name><surname>Fortunato</surname><given-names>S</given-names></name> (<year>2010</year>) <article-title>Community detection in graphs</article-title>. <source>Physics Reports</source><volume>486</volume>: <fpage>75</fpage>&#x02013;<lpage>174</lpage></mixed-citation></ref><ref id="pone.0102799-Lancichinetti1"><label>9</label><mixed-citation publication-type="journal"><name><surname>Lancichinetti</surname><given-names>A</given-names></name>, <name><surname>Fortunato</surname><given-names>S</given-names></name> (<year>2009</year>) <article-title>Community detection algorithms: a comparative analysis</article-title>. <source>Physical Review E</source><volume>80</volume>: <fpage>056117</fpage></mixed-citation></ref><ref id="pone.0102799-Newman1"><label>10</label><mixed-citation publication-type="journal"><name><surname>Newman</surname><given-names>MEJ</given-names></name>, <name><surname>Girvan</surname><given-names>M</given-names></name> (<year>2004</year>) <article-title>Finding and evaluating community structure in networks</article-title>. <source>Physical Review E</source><volume>69</volume>: <fpage>026113</fpage></mixed-citation></ref><ref id="pone.0102799-Good1"><label>11</label><mixed-citation publication-type="journal"><name><surname>Good</surname><given-names>BH</given-names></name>, <name><surname>de Montjoye</surname><given-names>YA</given-names></name>, <name><surname>Clauset</surname><given-names>A</given-names></name> (<year>2010</year>) <article-title>Performance of modularity maximization in practical contexts</article-title>. <source>Physical Review E</source><volume>81</volume>: <fpage>046106</fpage></mixed-citation></ref><ref id="pone.0102799-Leskovec1"><label>12</label><mixed-citation publication-type="other">Leskovec J, Lang KJ, Mahoney M (2010) Empirical comparison of algorithms for network community detection. In: Proceedings of the Nineteenth International Conference on World Wide Web. pp. 631&#x02013;640.</mixed-citation></ref><ref id="pone.0102799-Clauset1"><label>13</label><mixed-citation publication-type="journal"><name><surname>Clauset</surname><given-names>A</given-names></name>, <name><surname>Newman</surname><given-names>MEJ</given-names></name>, <name><surname>Moore</surname><given-names>C</given-names></name> (<year>2004</year>) <article-title>Finding community structure in very large networks</article-title>. <source>Physical Review E</source><volume>70</volume>: <fpage>066111</fpage></mixed-citation></ref><ref id="pone.0102799-Newman2"><label>14</label><mixed-citation publication-type="journal"><name><surname>Newman</surname><given-names>MEJ</given-names></name> (<year>2006</year>) <article-title>Modularity and community structure in networks</article-title>. <source>Proceedings of the National Academy of Sciences</source><volume>103</volume>: <fpage>8577</fpage>&#x02013;<lpage>8582</lpage></mixed-citation></ref><ref id="pone.0102799-Leicht1"><label>15</label><mixed-citation publication-type="journal"><name><surname>Leicht</surname><given-names>EA</given-names></name>, <name><surname>Newman</surname><given-names>MEJ</given-names></name> (<year>2008</year>) <article-title>Community structure in directed networks</article-title>. <source>Physical Review Letters</source><volume>100</volume>: <fpage>118703</fpage><pub-id pub-id-type="pmid">18517839</pub-id></mixed-citation></ref><ref id="pone.0102799-Newman3"><label>16</label><mixed-citation publication-type="journal"><name><surname>Newman</surname><given-names>MEJ</given-names></name> (<year>2004</year>) <article-title>Analysis of weighted networks</article-title>. <source>Physical Review E</source><volume>70</volume>: <fpage>056131</fpage></mixed-citation></ref><ref id="pone.0102799-Fortunato2"><label>17</label><mixed-citation publication-type="journal"><name><surname>Fortunato</surname><given-names>S</given-names></name>, <name><surname>Barthelemy</surname><given-names>M</given-names></name> (<year>2007</year>) <article-title>Resolution limit in community detection</article-title>. <source>Proceedings of the National Academy of Sciences</source><volume>104</volume>: <fpage>36</fpage>&#x02013;<lpage>41</lpage></mixed-citation></ref><ref id="pone.0102799-Reichardt1"><label>18</label><mixed-citation publication-type="journal"><name><surname>Reichardt</surname><given-names>J</given-names></name>, <name><surname>Bornholdt</surname><given-names>S</given-names></name> (<year>2006</year>) <article-title>Statistical mechanics of community detection</article-title>. <source>Physical Review E</source><volume>74</volume>: <fpage>016110</fpage></mixed-citation></ref><ref id="pone.0102799-Ruan1"><label>19</label><mixed-citation publication-type="journal"><name><surname>Ruan</surname><given-names>J</given-names></name>, <name><surname>Zhang</surname><given-names>W</given-names></name> (<year>2008</year>) <article-title>Identifying network communities with a high resolution</article-title>. <source>Physical Review E</source><volume>77</volume>: <fpage>016104</fpage></mixed-citation></ref><ref id="pone.0102799-Arenas1"><label>20</label><mixed-citation publication-type="journal"><name><surname>Arenas</surname><given-names>A</given-names></name>, <name><surname>Fernndez</surname><given-names>A</given-names></name>, <name><surname>Gmez</surname><given-names>S</given-names></name> (<year>2008</year>) <article-title>Analysis of the structure of complex networks at different resolution levels</article-title>. <source>New Journal of Physics</source><volume>10</volume>: <fpage>053039</fpage></mixed-citation></ref><ref id="pone.0102799-Aldecoa1"><label>21</label><mixed-citation publication-type="journal"><name><surname>Aldecoa</surname><given-names>R</given-names></name>, <name><surname>Marn</surname><given-names>I</given-names></name> (<year>2011</year>) <article-title>Deciphering network community structure by surprise</article-title>. <source>PLoS ONE</source><volume>6</volume>: <fpage>e24195</fpage><pub-id pub-id-type="pmid">21909420</pub-id></mixed-citation></ref><ref id="pone.0102799-Leung1"><label>22</label><mixed-citation publication-type="journal"><name><surname>Leung</surname><given-names>IXY</given-names></name>, <name><surname>Hui</surname><given-names>P</given-names></name>, <name><surname>Lio</surname><given-names>P</given-names></name>, <name><surname>Crowcroft</surname><given-names>J</given-names></name> (<year>2009</year>) <article-title>Towards real-time community detection in large networks</article-title>. <source>Physical Review E</source><volume>79</volume>: <fpage>066107</fpage></mixed-citation></ref><ref id="pone.0102799-Huang1"><label>23</label><mixed-citation publication-type="journal"><name><surname>Huang</surname><given-names>J</given-names></name>, <name><surname>Sun</surname><given-names>H</given-names></name>, <name><surname>Liu</surname><given-names>Y</given-names></name>, <name><surname>Song</surname><given-names>Q</given-names></name>, <name><surname>Weninger</surname><given-names>T</given-names></name> (<year>2011</year>) <article-title>Towards online multiresolution community detection in large-scale networks</article-title>. <source>PLoS ONE</source><volume>6</volume>: <fpage>e23829</fpage><pub-id pub-id-type="pmid">21887325</pub-id></mixed-citation></ref><ref id="pone.0102799-Kawadia1"><label>24</label><mixed-citation publication-type="journal">Kawadia V, Sreenivasan S (2012) Sequential detection of temporal communities by estrangement confinement. Scientific Reports <volume>2</volume>.</mixed-citation></ref><ref id="pone.0102799-Zhang1"><label>25</label><mixed-citation publication-type="other">Zhang W, Pan G, Wu Z, Li S (2013) Online community detection for large complex networks. In: Proceedings of the Twenty-Third International Joint Conference on Artificial Intelligence. pp. 1903&#x02013;1909.</mixed-citation></ref><ref id="pone.0102799-Price1"><label>26</label><mixed-citation publication-type="journal"><name><surname>Price</surname><given-names>DDS</given-names></name> (<year>1976</year>) <article-title>A general theory of bibliometric and other cumulative advantage processes</article-title>. <source>Journal of the American Society for Information Science</source><volume>27</volume>: <fpage>292</fpage>&#x02013;<lpage>306</lpage></mixed-citation></ref><ref id="pone.0102799-Barabsi1"><label>27</label><mixed-citation publication-type="journal"><name><surname>Barab&#x000e1;si</surname><given-names>AL</given-names></name>, <name><surname>Albert</surname><given-names>R</given-names></name> (<year>1999</year>) <article-title>Emergence of scaling in random networks</article-title>. <source>Science</source><volume>286</volume>: <fpage>509</fpage>&#x02013;<lpage>512</lpage><pub-id pub-id-type="pmid">10521342</pub-id></mixed-citation></ref><ref id="pone.0102799-Newman4"><label>28</label><mixed-citation publication-type="journal"><name><surname>Newman</surname><given-names>MEJ</given-names></name> (<year>2004</year>) <article-title>Detecting community structure in networks</article-title>. <source>The European Physical Journal B-Condensed Matter and Complex Systems</source><volume>38</volume>: <fpage>321</fpage>&#x02013;<lpage>330</lpage></mixed-citation></ref><ref id="pone.0102799-Brandes1"><label>29</label><mixed-citation publication-type="journal"><name><surname>Brandes</surname><given-names>U</given-names></name>, <name><surname>Delling</surname><given-names>D</given-names></name>, <name><surname>Gaertler</surname><given-names>M</given-names></name>, <name><surname>Gorke</surname><given-names>R</given-names></name>, <name><surname>Hoefer</surname><given-names>M</given-names></name>, <etal>et al</etal> (<year>2008</year>) <article-title>On modularity clustering</article-title>. <source>IEEE Transactions on Knowledge and Data Engineering</source><volume>20</volume>: <fpage>172</fpage>&#x02013;<lpage>188</lpage></mixed-citation></ref><ref id="pone.0102799-Clauset2"><label>30</label><mixed-citation publication-type="journal"><name><surname>Clauset</surname><given-names>A</given-names></name>, <name><surname>Shalizi</surname><given-names>C</given-names></name>, <name><surname>Newman</surname><given-names>M</given-names></name> (<year>2009</year>) <article-title>Power-law distributions in empirical data</article-title>. <source>SIAM Review</source><volume>51</volume>: <fpage>661</fpage>&#x02013;<lpage>703</lpage></mixed-citation></ref><ref id="pone.0102799-Faloutsos1"><label>31</label><mixed-citation publication-type="journal"><name><surname>Faloutsos</surname><given-names>M</given-names></name>, <name><surname>Faloutsos</surname><given-names>P</given-names></name>, <name><surname>Faloutsos</surname><given-names>C</given-names></name> (<year>1999</year>) <article-title>On power-law relationships of the internet topology</article-title>. <source>SIGCOMM Computer Communication Review</source><volume>29</volume>: <fpage>251</fpage>&#x02013;<lpage>262</lpage></mixed-citation></ref><ref id="pone.0102799-Stumpf1"><label>32</label><mixed-citation publication-type="journal"><name><surname>Stumpf</surname><given-names>MPH</given-names></name>, <name><surname>Porter</surname><given-names>MA</given-names></name> (<year>2012</year>) <article-title>Critical truths about power laws</article-title>. <source>Science</source><volume>335</volume>: <fpage>665</fpage>&#x02013;<lpage>666</lpage><pub-id pub-id-type="pmid">22323807</pub-id></mixed-citation></ref><ref id="pone.0102799-Newman5"><label>33</label><mixed-citation publication-type="journal"><name><surname>Newman</surname><given-names>MEJ</given-names></name> (<year>2003</year>) <article-title>The structure and function of complex networks</article-title>. <source>SIAM Review</source><volume>45</volume>: <fpage>167</fpage>&#x02013;<lpage>256</lpage></mixed-citation></ref><ref id="pone.0102799-Boccaletti1"><label>34</label><mixed-citation publication-type="journal"><name><surname>Boccaletti</surname><given-names>S</given-names></name>, <name><surname>Latora</surname><given-names>V</given-names></name>, <name><surname>Moreno</surname><given-names>Y</given-names></name>, <name><surname>Chavez</surname><given-names>M</given-names></name>, <name><surname>Hwang</surname><given-names>DU</given-names></name> (<year>2006</year>) <article-title>Complex networks: structure and dynamics</article-title>. <source>Physics Reports</source><volume>424</volume>: <fpage>175</fpage>&#x02013;<lpage>308</lpage></mixed-citation></ref><ref id="pone.0102799-Xie1"><label>35</label><mixed-citation publication-type="journal"><name><surname>Xie</surname><given-names>YB</given-names></name>, <name><surname>Zhou</surname><given-names>T</given-names></name>, <name><surname>Wang</surname><given-names>BH</given-names></name> (<year>2008</year>) <article-title>Scale-free networks without growth</article-title>. <source>Physica A: Statistical Mechanics and its Applications</source><volume>387</volume>: <fpage>1683</fpage>&#x02013;<lpage>1688</lpage></mixed-citation></ref><ref id="pone.0102799-Albert1"><label>36</label><mixed-citation publication-type="journal"><name><surname>Albert</surname><given-names>R</given-names></name>, <name><surname>Barab&#x000e1;si</surname><given-names>AL</given-names></name> (<year>2002</year>) <article-title>Statistical mechanics of complex networks</article-title>. <source>Reviews of Modern Physics</source><volume>74</volume>: <fpage>47</fpage></mixed-citation></ref><ref id="pone.0102799-Mitzenmacher1"><label>37</label><mixed-citation publication-type="journal"><name><surname>Mitzenmacher</surname><given-names>M</given-names></name> (<year>2004</year>) <article-title>A brief history of generative models for power law and lognormal distributions</article-title>. <source>Internet Mathematics</source><volume>1</volume>: <fpage>226</fpage>&#x02013;<lpage>251</lpage></mixed-citation></ref><ref id="pone.0102799-L1"><label>38</label><mixed-citation publication-type="journal"><name><surname>L&#x000fc;</surname><given-names>L</given-names></name>, <name><surname>Zhou</surname><given-names>T</given-names></name> (<year>2011</year>) <article-title>Link prediction in complex networks: A survey</article-title>. <source>Physica A: Statistical Mechanics and its Applications</source><volume>390</volume>: <fpage>1150</fpage>&#x02013;<lpage>1170</lpage></mixed-citation></ref><ref id="pone.0102799-Blondel1"><label>39</label><mixed-citation publication-type="journal"><name><surname>Blondel</surname><given-names>VD</given-names></name>, <name><surname>Guillaume</surname><given-names>JL</given-names></name>, <name><surname>Lambiotte</surname><given-names>R</given-names></name>, <name><surname>Lefebvre</surname><given-names>E</given-names></name> (<year>2008</year>) <article-title>Fast unfolding of communities in large networks</article-title>. <source>Journal of Statistical Mechanics: Theory and Experiment</source><volume>2008</volume>: <fpage>P10008</fpage></mixed-citation></ref><ref id="pone.0102799-Leskovec2"><label>40</label><mixed-citation publication-type="journal"><name><surname>Leskovec</surname><given-names>J</given-names></name>, <name><surname>Kleinberg</surname><given-names>J</given-names></name>, <name><surname>Faloutsos</surname><given-names>C</given-names></name> (<year>2007</year>) <article-title>Graph evolution: densification and shrinking diameters</article-title>. <source>ACM Transactions on Knowledge Discovery from Data</source><volume>1</volume>: <fpage>2</fpage></mixed-citation></ref><ref id="pone.0102799-Leskovec3"><label>41</label><mixed-citation publication-type="journal"><name><surname>Leskovec</surname><given-names>J</given-names></name>, <name><surname>Lang</surname><given-names>KJ</given-names></name>, <name><surname>Dasgupta</surname><given-names>A</given-names></name>, <name><surname>Mahoney</surname><given-names>MW</given-names></name> (<year>2009</year>) <article-title>Community structure in large networks: Natural cluster sizes and the absence of large well-defined clusters</article-title>. <source>Internet Mathematics</source><volume>6</volume>: <fpage>29</fpage>&#x02013;<lpage>123</lpage></mixed-citation></ref><ref id="pone.0102799-Leskovec4"><label>42</label><mixed-citation publication-type="other">Leskovec J, Kleinberg J, Faloutsos C (2005) Graphs over time: densification laws, shrinking diameters and possible explanations. In: Proceedings of the Eleventh International Conference on Knowledge Discovery in Data Mining. pp. 177&#x02013;187.</mixed-citation></ref><ref id="pone.0102799-Yang1"><label>43</label><mixed-citation publication-type="other">Yang J, Leskovec J (2012) Defining and evaluating network communities based on ground-truth. In: Proceedings of the Twelfth International Conference on Data Mining. pp. 745&#x02013;754.</mixed-citation></ref><ref id="pone.0102799-Leskovec5"><label>44</label><mixed-citation publication-type="journal"><name><surname>Leskovec</surname><given-names>J</given-names></name>, <name><surname>Adamic</surname><given-names>LA</given-names></name>, <name><surname>Huberman</surname><given-names>BA</given-names></name> (<year>2007</year>) <article-title>The dynamics of viral marketing</article-title>. <source>ACM Transactions on the Web</source><volume>1</volume>: <fpage>5</fpage></mixed-citation></ref><ref id="pone.0102799-Leskovec6"><label>45</label><mixed-citation publication-type="other">Leskovec J, Huttenlocher D, Kleinberg J (2010) Predicting positive and negative links in online social networks. In: Proceedings of the Nineteenth International Conference on World Wide Web. pp. 641&#x02013;650.</mixed-citation></ref><ref id="pone.0102799-Lancichinetti2"><label>46</label><mixed-citation publication-type="journal"><name><surname>Lancichinetti</surname><given-names>A</given-names></name>, <name><surname>Fortunato</surname><given-names>S</given-names></name>, <name><surname>Kertsz</surname><given-names>J</given-names></name> (<year>2009</year>) <article-title>Detecting the overlapping and hierarchical community structure in complex networks</article-title>. <source>New Journal of Physics</source><volume>11</volume>: <fpage>033015</fpage></mixed-citation></ref></ref-list></back></article>