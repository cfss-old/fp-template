<!DOCTYPE article PUBLIC "-//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN" "JATS-archivearticle1.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:mml="http://www.w3.org/1998/Math/MathML" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">J Med Signals Sens</journal-id><journal-id journal-id-type="publisher-id">JMSS</journal-id><journal-title-group><journal-title>Journal of Medical Signals and Sensors</journal-title></journal-title-group><issn pub-type="ppub">2228-7477</issn><issn pub-type="epub">2228-7477</issn><publisher><publisher-name>Medknow Publications &#x00026; Media Pvt Ltd</publisher-name><publisher-loc>India</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">22606653</article-id><article-id pub-id-type="pmc">3317761</article-id><article-id pub-id-type="publisher-id">JMSS-1-1</article-id><article-categories><subj-group subj-group-type="heading"><subject>Original Article</subject></subj-group></article-categories><title-group><article-title>Volumetric Medical Image Coding: An Object-based, Lossy-to-lossless and Fully Scalable Approach</article-title></title-group><contrib-group><contrib contrib-type="author"><name><surname>Danyali</surname><given-names>Habibiollah</given-names></name><xref ref-type="aff" rid="aff1"/><xref ref-type="corresp" rid="cor1"/></contrib><contrib contrib-type="author"><name><surname>Mertins</surname><given-names>Alfred</given-names></name><xref ref-type="aff" rid="aff1"/></contrib></contrib-group><aff id="aff1"><italic>Department of Electrical and Electronics Engineering, Shiraz University of Technology, Shiraz, Iran</italic></aff><aff id="aff2"><label>1</label><italic>Institute for Signal Processing, University of L&#x000fc;beck, D-23538 L&#x000fc;beck, Germany</italic></aff><author-notes><corresp id="cor1"><bold>Address for correspondence:</bold> Dr. Habibiollah Danyali, Shiraz University of Technology, Shiraz, Iran. E-mail: <email xlink:href="danyali@sutech.ac.ir">danyali@sutech.ac.ir</email></corresp></author-notes><pub-date pub-type="ppub"><season>Jan-Apr</season><year>2011</year></pub-date><volume>1</volume><issue>1</issue><fpage>1</fpage><lpage>11</lpage><permissions><copyright-statement>Copyright: &#x000a9; Journal of Medical Signals and Sensors</copyright-statement><copyright-year>2011</copyright-year><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by-nc-sa/3.0"><license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution-Noncommercial-Share Alike 3.0 Unported, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p></license></permissions><abstract><p>In this article, an object-based, highly scalable, lossy-to-lossless 3D wavelet coding approach for volumetric medical image data (e.g., magnetic resonance (MR) and computed tomography (CT)) is proposed. The new method, called 3DOBHS-SPIHT, is based on the well-known set partitioning in the hierarchical trees (SPIHT) algorithm and supports both quality and resolution scalability. The 3D input data is grouped into groups of slices (GOS) and each GOS is encoded and decoded as a separate unit. The symmetric tree definition of the original 3DSPIHT is improved by introducing a new asymmetric tree structure. While preserving the compression efficiency, the new tree structure allows for a small size of each GOS, which not only reduces memory consumption during the encoding and decoding processes, but also facilitates more efficient random access to certain segments of slices. To achieve more compression efficiency, the algorithm only encodes the main object of interest in each 3D data set, which can have any arbitrary shape, and ignores the unnecessary background. The experimental results on some MR data sets show the good performance of the 3DOBHS-SPIHT algorithm for multi-resolution lossy-to-lossless coding. The compression efficiency, full scalability, and object-based features of the proposed approach, beside its lossy-to-lossless coding support, make it a very attractive candidate for volumetric medical image information archiving and transmission applications.</p></abstract><kwd-group><kwd><italic>HS-SPIHT</italic></kwd><kwd><italic>lossy-to-lossless coding</italic></kwd><kwd><italic>medical image compression</italic></kwd><kwd><italic>object-based coding</italic></kwd><kwd><italic>progressive transmission</italic></kwd><kwd><italic>scalability</italic></kwd></kwd-group></article-meta></front><body><sec id="sec1-1"><title>INTRODUCTION</title><p>Due to the rapid advances in digital imaging technology, medical images are nowadays almost taken/gathered in digital format. This not only facilitates an easy and efficient way of storage and transmission for clinical picture archiving and communication systems (CPACS), but also makes it possible to conduct a digital process on the image information, which is required in computer-aided diagnosis (CAD) schemes.</p><p>From the coding point of view the main features required for efficient medical image information archiving and a transmission system can be highlighted as follows:</p><p>Lossy-to-lossless coding: Medical image coding should support lossy-to-lossless coding functionality in order to enable the provision of appropriate services for different applications according to their sensitivity to the image quality in the diagnosis process. In lossless compression, the reconstructed image is exactly identical to the original image, while lossy compression aims to achieve a higher compression ratio by allowing some degradation in the image quality. As lossless compression does not degrade the image, it facilitates more accurate diagnosis, of course at the expense of lower compression ratios (i.e., higher bit rates). Discarding small image details that might be an indication of pathology could alter diagnosis, causing severe human and legal consequences. However, lossy compression is required to significantly reduce transmission and storage costs where the loss is not diagnostically significant. During the past years, many lossless and lossy compression techniques have been proposed for natural images, which resulted in several international standards such as: JPEG (for lossy image coding),[<xref ref-type="bibr" rid="ref1">1</xref>] JPEG-LS (for lossless image coding),[<xref ref-type="bibr" rid="ref2">2</xref>] and JPEG-2000 (the latest standard for lossy-to-lossless image coding).[<xref ref-type="bibr" rid="ref3">3</xref>]</p><p>Object-based coding: Often there are regions inside a medical image that contain the main information relevant to medical diagnostic purposes. For an efficient CPACS system, an object-based coding is desirable to enable the coding of such regions, which can have any arbitrary shape, separately from the other parts of the image. This feature helps to achieve a very high compression ratio by focusing only on the important regions in the image and discarding the unimportant background that usually takes up a large area of the medical images, or by encoding the background at a lower precision with a lossy image coder.[<xref ref-type="bibr" rid="ref4">4</xref>&#x02013;<xref ref-type="bibr" rid="ref7">7</xref>] The region-of-interest (ROI) coding feature in the JPEG-2000 standard considers the whole image for coding, but applies a higher coding precision to the ROI.[<xref ref-type="bibr" rid="ref8">8</xref><xref ref-type="bibr" rid="ref9">9</xref>] On the other hand, an object-based coding makes it possible to encode the region (with any shape, not only rectangular shape as is the case in most ROI coding techniques) as a separate object, regardless of the rest of the image.</p><p>Scalability: This feature refers to the potential in the coded bitstream that allows the decoder to usefully decode from only parts of the bitstream in order to meet a certain quality and/or a spatial resolution requirement. In this article, scalability is always seen in conjunction with embedded (progressive) coding. A scalable coded bitstream consists of a set of embedded parts that offer an increasingly better signal-to-noise ratio (SNR) (known as SNR scalability or quality scalability) or higher spatial resolution (referred to as spatial scalability).[<xref ref-type="bibr" rid="ref10">10</xref>] A highly scalable coding approach that supports both SNR and spatial scalability is an important requirement for the efficient archiving of medical images. It enables the hierarchical search of a medical database from low resolution/quality images to high resolution/quality, images, which can effectively speed up the search for a specific image or a group of images, by discarding a considerable number of images at the early low resolution/quality search stages. For telemedicine applications, especially over heterogeneous networks such as the Internet, the scalability functionality enables a wide range of end-users with different processing and network access bandwidths, to be serviced from one embedded bitstream. Adding the scalability feature to an object-based coding enables the low performance end-users in a telemedicine network to receive the unimportant regions of medical images at low resolution and/or quality and to spend their coding budget on receiving the important regions at a high quality and resolution, which are crucial for correct diagnosis. Moreover, scalability supports a better error-protection mechanism. This is due to the fact that partitioning of the information into different parts makes it possible to provide better protection for the more important parts.</p><p>Volumetric medical images (e.g., MR and CT) are 3D data sets that consist of a sequence of 2D data slices. For efficient archiving and transmission of such vast amounts of data, a high degree of compression is required. A straightforward method is to apply a 2D coding scheme successively, to encode each slice independent from the other slices. Although this method is simple, it ignores the high correlation that generally exists between the consecutive slices. 3D coding approaches, on the other hand, try to exploit the interslice dependency to achieve a higher compression ratio. For this, contiguous slices are often organized in groups, and each group of slices (GOS) is encoded as a 3D data set. More details on this type of 3D coding will be given below.</p><p>Over the past decade, wavelet-based image compression schemes have become increasingly important and gained widespread acceptance. An example is the JPEG2000 still image compression standard.[<xref ref-type="bibr" rid="ref3">3</xref><xref ref-type="bibr" rid="ref11">11</xref>] Due to the multi-resolution signal representation offered by the wavelet transform, wavelet-based coding schemes have a great potential to support the scalability features. Among the state-of-the-art embedded wavelet coding approaches the Set Partitioning in Hierarchical Trees (SPIHT) algorithm[<xref ref-type="bibr" rid="ref12">12</xref>] is well known, as a bench- mark for its compression efficiency, full SNR scalability support, and very low complexity. These features have made SPIHT very attractive for medical image coding as well.[<xref ref-type="bibr" rid="ref4">4</xref><xref ref-type="bibr" rid="ref13">13</xref>&#x02013;<xref ref-type="bibr" rid="ref14">14</xref>] As shown in,[<xref ref-type="bibr" rid="ref4">4</xref>] an object-based version of SPIHT (OB-SPIHT) exhibits a very competitive peak signal-to-noise ratio (PSNR) performance for the compression of digital mammography. On the other hand, the research conducted by Pearlman[<xref ref-type="bibr" rid="ref15">15</xref>] showed a very significant complexity reduction of SPIHT over JPEG2000.</p><p>Three-dimensional extensions of SPIHT have been reported in the literature for video coding[<xref ref-type="bibr" rid="ref16">16</xref>&#x02013;<xref ref-type="bibr" rid="ref18">18</xref>] as well as for volumetric medical image compression.[<xref ref-type="bibr" rid="ref13">13</xref><xref ref-type="bibr" rid="ref14">14</xref>] Other 3D wavelet-based techniques for coding of volumetric medical data sets have also been reported in literature (e.g.,[<xref ref-type="bibr" rid="ref19">19</xref>&#x02013;<xref ref-type="bibr" rid="ref21">21</xref>] ). The research conducted in[<xref ref-type="bibr" rid="ref14">14</xref>] on lossless CT and MR coding, with an improved version of 3D SPIHT, showed that SPIHT is quite efficient, in comparison to other 2D and 3D coders, for lossless volumetric medical image coding.</p><p>The current literature on volumetric medical image coding is mainly focused on compression. The SPIHT bitstream is tailored for full SNR scalability, but it does not support spatial scalability. For an efficient medical image archiving and transmission system, however, a fully scalable coder is greatly required. Such a coder must provide a bitstream that can be parsed for multi-resolution decoding at different rates, by different clients, with different capabilities, and it must also provide other important features such as object-based access and coding.</p><p>This research proposes an object-based volumetric medical image coding system based on the highly scalable set partitioning in hierarchical trees (HS-SPIHT) algorithm. The HS-SPIHT, introduced by the authors in their previous studies,[<xref ref-type="bibr" rid="ref22">22</xref><xref ref-type="bibr" rid="ref23">23</xref>] is a modification of the SPIHT algorithm[<xref ref-type="bibr" rid="ref12">12</xref>] that adds spatial scalability features to the SPIHT algorithm without sacrificing the interesting features of the original algorithm. The coding system proposed in this article, called 3DOBHS-SPIHT, extends the 2D HS-SPIHT algorithm to 3D and further modifies it for object-based coding. A new asymmetric tree structure for the 3D wavelet coefficients is introduced to allow a small size for the GOSs, for efficient random access to the slices in the decoding process. The 3DOBHS-SPIHT algorithm fulfills all of the highlighted requirements for medical image information, archiving, and transmission systems mentioned earlier in this section.</p><p>The rest of this article is organized as follows. First we explain the whole 3DOBHS-SPIHT coding system in four subsections. Then, simulations of the coding system are given in detail. After that we present some experimental results for multi-resolution lossy and lossless coding by the proposed coding system, and finally, we conclude the article.</p></sec><sec id="sec1-2"><title>3D OBJECT-BASED HS-SPIHT SYSTEM</title><p>In this section first an overview of the 3DOBHS-SPIHT coding system is given, then an asymmetric tree structure for the 3D coding is introduced, and subsequently the 3DOBHS-SPIHT coding algorithm is explained. Finally the scalable structure of the 3DOBHS-SPIHT bitstream is presented.</p><sec id="sec2-1"><title>System Overview</title><p>The proposed 3DOBHS-SPIHT coding system is depicted in <xref ref-type="fig" rid="F1">Figure 1</xref>. The system input is a volumetric medical image set that is divided into GOS. On the encoder side, the input GOS is first segmented in order to extract the medical object of interest from the background. Each voxel in the data set is considered either inside or outside the object. The GOS object is decomposed by a 3D shape-adaptive integer DWT (3DSA-IDWT) approach, which maps the integer object voxels to the integer wavelet coefficients. Details on the segmentation process and the DWT will be given in In the next section.</p><fig id="F1" position="float"><label>Figure 1</label><caption><p>Block diagram of the 3DOBHS-SPIHT coding system; w denotes the wavelet coefficients and m the decomposed mask</p></caption><graphic xlink:href="JMSS-1-1-g001"/></fig><p>The decomposed object coefficients, denoted as w, and the decomposed shape mask, denoted as m, are then consigned to the 3DOBHS-SPIHT encoder. The encoder only encodes the coefficients that belong to the decomposed object. To recognize these coefficients it uses the decomposed shape mask. The bitstreams from the shape coding and object coding algorithms are assembled in the bitstream organizer to generate the final encoder output bitstream for the GOS.</p><p>In a customization stage, the encoded bitstream is reordered and truncated by a parser, which provides proper bitstreams for multiscale lossy-to-lossless decoding. On the decoder side, the bitstream separator first extracts the mask and the object bitstreams from the parsed bitstream. The shape mask is then reconstructed by decoding the shape bitstream. The decomposed mask, which is required by the 3DOHS-SPIHT decoder, is provided by applying the same level of decomposition as that used by the encoder to the shape mask. The 3DOHS-SPIHT decoder then decodes the object bitstream, and the inverse 3DSA-IDWT is applied to the decoded wavelet coefficients to reconstruct the GOS object at the requested rate and resolution.</p></sec><sec id="sec2-2"><title>Asymmetric Tree Structure</title><p><xref ref-type="fig" rid="F2">Figure 2</xref> depicts the parent-offspring relationship in a 2D tree of wavelet coefficients defined in the SPIHT algorithm. A straightforward symmetric extension of this 2D tree is used in[<xref ref-type="bibr" rid="ref13">13</xref>] for lossless volumetric MR and CT image coding by a 3DSPIHT. <xref ref-type="fig" rid="F3">Figure 3a</xref> shows the symmetric 3D extension of the 2D tree structure for the 3D wavelet packet decomposition of a GOS, after applying two levels of axial decomposition, followed by two levels of transaxial decomposition, resulting in 21 sub-bands. This 3D tree structure was introduced in[<xref ref-type="bibr" rid="ref17">17</xref>] for 3DSPIHT video coding. In this structure the coefficients in the lowest transaxial-axial sub-band are grouped into 2&#x000d7;2&#x000d7;2 adjacent coefficients that are known as tree roots [<xref ref-type="fig" rid="F3">Figure 3a</xref>]. Thus, it is always required to have an even number of slices (at least two) in the lowest axial band. On the other hand, in a 3D coding of volumetric medical images, in order to provide efficient random access to individual slices in a data set, for search and retrieval purposes, it is necessary to have the coding units (i.e., the GOS) as small as possible. A smaller GOS size is also favorable for the encoder, parser, and decoder, as it consumes less memory. Choosing a small GOS size, however, limits the number of axial wavelet decomposition levels, which has a negative impact on the compression gain. For example to be able to apply two levels of axial decomposition, the GOS size needs to be at least eight. To overcome this problem, we have modified the 3D parent-offspring relationship in the decomposed GOS and have introduced an asymmetric tree structure. <xref ref-type="fig" rid="F3">Figure 3b</xref> shows the new asymmetric tree structure. In the lowest transaxial-axial sub-band, the coefficients, which are known as roots, are grouped into 2&#x000d7;2 elements rather than 2&#x000d7;2&#x000d7;2 elements. In each slice, the parent-offspring relationship is the same as defined in 2DSPIHT. The coefficients in the lowest transaxial sub-band (the roots of 2D trees in each slice) establish the tree structure in the axial direction as shown in <xref ref-type="fig" rid="F4">Figure 4</xref>. Therefore, in each slice, each root has two offsprings in the next higher axial domain (except for the roots in the lowest axial band (t-L<sub>2</sub>), which has one offspring in the t-H<sub>2</sub> band, and for the roots in the highest axial band (t-H<sub>1</sub>), which are leaves and do not have any offspring in the axial direction) and four offsprings in the next transaxial band, in the same slice. Note that this is the same as for 2DSPIHT, where one coefficient in each 2&#x000d7;2 element, marked by * in <xref ref-type="fig" rid="F2">Figure 2</xref>, has no transaxial offspring. The new tree structure is called asymmetric, because unlike the symmetric tree [<xref ref-type="fig" rid="F3">Figure 3a</xref>], in which each coefficient has eight offsprings, the number of offsprings in the new tree structure is different and depends on the location of the parent coefficient in the decomposed GOS sub-bands. Algorithm 1 shows the details of the parent-offspring relationship for the new tree structure.</p><fig id="F2" position="float"><label>Figure 2</label><caption><p>2D SPIHT parent-children dependency across wavelet sub-bands in each slice</p></caption><graphic xlink:href="JMSS-1-1-g002"/></fig><fig id="F3" position="float"><label>Figure 3</label><caption><p>3D tree structures. (a) The structure used in 3D SPIHT[<xref ref-type="bibr" rid="ref17">17</xref>] after two levels of wavelet packet decomposition of a GOS; (b) The asymmetric 3D tree structure used in the proposed algorithm in this article after two levels of wavelet packet decomposition of a GOS</p></caption><graphic xlink:href="JMSS-1-1-g003"/></fig><fig id="F4" position="float"><label>Figure 4</label><caption><p>1D interslice dependency in a 3D wavelet decomposed GOS (only defined for the coefficients in the lowest spatial sub-band in each slice)</p></caption><graphic xlink:href="JMSS-1-1-g004"/></fig><p>Algorithm 1: Parent-offspring relationship for the 3D asymmetric tree structure</p><p>
<list list-type="bullet"><list-item><p>if (the coefficient is in the lowest transaxial sub-band)</p></list-item><list-item><p>if (the coefficient is in the lowest axial sub-band) it has five offsprings (one in the next axial sub-band [<xref ref-type="fig" rid="F4">Figure 4</xref>] and four in the next transaxial sub-band [<xref ref-type="fig" rid="F2">Figure 2</xref>], except for the coefficient marked by *, which has only one offspring in the next axial sub-band.</p></list-item><list-item><p>else, if (this coefficient is in the highest axial sub-band) it has four offsprings in the next transaxial sub-band [<xref ref-type="fig" rid="F2">Figure 2</xref>], except for the coefficient marked by FNx01, which has no offspring.</p></list-item><list-item><p>else, it has six offsprings (two in the next axial sub-band [<xref ref-type="fig" rid="F4">Figure 4</xref>] and four in the next transaxial sub-band [<xref ref-type="fig" rid="F2">Figure 2</xref>].</p></list-item><list-item><p>else, if (the coefficient is in the highest transaxial sub-band) it has no offspring.</p></list-item><list-item><p>else, it has four offspring in the next transaxial sub-band [<xref ref-type="fig" rid="F2">Figure 2</xref>].</p></list-item></list>
</p></sec><sec id="sec2-3"><title>The 3D OBHS-SPIHT Algorithm</title><p>The 3DSPIHT algorithm of[<xref ref-type="bibr" rid="ref17">17</xref>] considers sets of coefficients that are related through the parent-offspring dependency depicted in <xref ref-type="fig" rid="F3">Figure 3a</xref>. In its bitplane coding process, the algorithm deals with the wavelet coefficients as either members of insignificant sets, individual insignificant pixels, or significant pixels. It sorts these coefficients into three ordered lists: the list of insignificant sets (LIS), the list of insignificant pixels (LIP), and the list of significant pixels (LSP). The main concept of the algorithm is managing these lists in order to efficiently extract insignificant sets in a hierarchical structure and identify significant coefficients, which is the core of its high compression performance. The 3DSPIHT algorithm provides a progressive (by quality) bitstream, which is fully SNR scalable, however, its bitstream does not support spatial scalability.</p><p>In[<xref ref-type="bibr" rid="ref22">22</xref><xref ref-type="bibr" rid="ref23">23</xref>] we proposed a scalable modification of 2DSPIHT for image coding, called highly scalable SPIHT (HS-SPIHT), through the introduction of multiple resolution-dependent lists and a resolution-dependent sorting pass.</p><p>In the present study, the HS-SPIHT algorithm is first extended to 3D (3DHS-SPIHT), to be able to use it for volumetric coding and then further improved to be object-based (3DOBHS-SPIHT) for coding of objects with any shape.</p><p>In a 3D (2D+1D) wavelet-decomposed GOS, the number of spatial resolution levels depends on the number of 2D spatial wavelet decomposition levels applied to the slices. In general, by applying Ns levels of a 2D wavelet transform to each slice, at most, the Ns+1 levels of different spatial resolution will be provided. We denote the lowest spatial resolution level as level Ns+1. The original sequence that has slices with the full spatial resolution is then known as level 1. The assigned spatial resolution to level k is 1/2<sup>k-1</sup> of the spatial resolution of the original data set. The three transaxial sub-bands (HL<sub>k</sub>, LH<sub>k</sub>, HH<sub>k</sub> in all axial sub-bands) that need to be added to the spatial resolution Level k+1 to increase its resolution to Level k are grouped and called spatial sub-band set level k and referred to as B<sub>k</sub> [<xref ref-type="fig" rid="F5">Figure 5</xref>].</p><fig id="F5" position="float"><label>Figure 5</label><caption><p>Different levels of spatial sub-band sets related to different spatial resolutions in a 3D wavelet packet decomposition</p></caption><graphic xlink:href="JMSS-1-1-g005"/></fig><p>To provide full spatial scalability, the 3DOBHS-SPIHT algorithm encodes the different resolution sub-band sets separately, allowing a transcoder or a decoder to directly access the data needed for reconstruction of a desired spatial resolution and/or quality. To improve the algorithm to be used for coding of volumetric medical images, which contain 3D objects with arbitrary shape, we only consider and process those coefficients that belong to the decomposed object [<xref ref-type="fig" rid="F6">Figure 6</xref>] and those sets that are at least partially located inside the decomposed object, similar to the SA-SPIHT algorithms in.[<xref ref-type="bibr" rid="ref24">24</xref><xref ref-type="bibr" rid="ref25">25</xref>]</p><fig id="F6" position="float"><label>Figure 6</label><caption><p>Example of a 2D decomposed mask of an arbitrarily shaped object</p></caption><graphic xlink:href="JMSS-1-1-g006"/></fig><p>The 3DOBHS-SPIHT algorithm uses the asymmetric tree structure defined in the previous subsection.</p><p>To manage the scalable coding process, for each resolution sub-band set, the algorithm defines a set of LIV, LSV, and LIS, which refer to a list of insignificant voxels, list of significant voxels, and list of insignificant sets, respectively. Therefore there are LIV<sub>k</sub>, LSV<sub>k</sub>, and LIS<sub>k</sub> for k=s<sub>max</sub>, s<sub>max-1</sub>,..., 1 where smax is the maximum number of spatial resolution levels supported by the encoder (s<sub>max</sub>&#x02264;Ns+1). Similar to 3DSPIHT, 3DOBHS-SPIHT transmits bitplane by bitplane, but it uses multiple lists for handling different resolution levels, similar to.[<xref ref-type="bibr" rid="ref22">22</xref><xref ref-type="bibr" rid="ref26">26</xref>] In each bitplane, the 3DOBHS- SPIHT coder starts encoding from the maximum resolution level (s<sub>max</sub>) and proceeds to the lowest level (level 1). During its resolution-dependent sorting pass for the lists that belong to level s, the algorithm first does the sorting for the coefficients in the LIV<sub>s</sub>, in the same manner as 3DSPIHT, to find and output significance bits for all list entries, and then processes the LIS<sub>s</sub>. In the LIS<sub>s</sub> sorting pass, all entries of the list are processed in order. Sets that are at least partially located in the resolution level are tested for significance and those that completely fall outside the resolution level are moved to the LIS<sub>s-1</sub>. Once a set is tested for significance, it stays in the LIS<sub>s</sub>. If it is insignificant a &#x02018;0&#x02019; is placed in the bitstream. If significant, a &#x02018;1&#x02019; goes to the bitstream, and the set is partitioned into its offspring voxels and descendant subsets and will be removed from the LIS<sub>s</sub>. The offspring voxels will be tested for significance and moved to the end of LIV<sub>s</sub> if insignificant and LSV<sub>s</sub> if significant. The new subsets will then be added to the end of LIS<sub>s-1</sub>. After completing the sorting pass for LIV<sub>s</sub> and LIS<sub>s</sub>, the refinement pass will be done for all entries of LSV<sub>s</sub> according to the current threshold. Then the threshold is lowered for the next bitplane coding stage and the procedure will be repeated. After the algorithm completes the sorting and the refinement passes to resolution level <italic>s</italic> it will repeat the same procedure for the next lower level until the full-resolution stage (level 1) is completed. The total number of bits belonging to a particular bitplane for 3DOBHS-SPIHT is the same as for 3DSPIHT, but 3DOBHS-SPIHT arranges them according to their spatial resolution dependency. Note that the total storage requirement for LIV<sub>s</sub>, LSV<sub>s</sub>, and LIS<sub>s</sub>, for all resolutions, is the same as for LIS, LIP, and LSP used by the 3DSPIHT algorithm.</p></sec><sec id="sec2-4"><title>Bitstream Structure</title><p><xref ref-type="fig" rid="F7">Figure 7</xref> shows the structure of the bitstream generated by the 3DOBHS-SPIHT encoder for a GOS. The GOS bitstream contains the mask and object bitstreams. The scalable object bitstream is constructed with different codeparts (P<sup>n</sup>), where each part belongs to a bitplane level. Inside each bitplane codepart, the bits belong to different spatial sub-band sets, P<sub>k</sub><sup>n</sup>, separable. To support bitstream parsing, some markers are put into the bitstream, to provide the information required for identifying the different resolution and bitplane codeparts in the parsing process.</p><fig id="F7" position="float"><label>Figure 7</label><caption><p>Structure of the 3DOBHS-SPIHT encoder bitstream for a GOS. P<sup>n</sup><sub>k</sub> is related to the codepart of spatial sub-band set level k (B<sub>k</sub>) at bitplane level n</p></caption><graphic xlink:href="JMSS-1-1-g007"/></fig><p>The encoder needs to encode the input 3D object only once at a lossless rate (covering all biplane coding levels from the maximum bitplane level to bitplane level 0). Different bitstreams for different spatial resolutions can be easily generated from the encoded bitstream by selecting the related resolution codeparts. For example, to provide a bitstream for resolution level r, in each bitplane codepart, only the resolution parts that belong to the spatial resolution levels greater or equal to r are kept, and all other parts are removed. The parsing process is a simple reordering of the original bitstream codepart and can be carried out by a server that stores the encoded medical data sets or by an individual parser as a part of an active network. The parser does not need to decode any part of the bitstream. As a distinct feature, the reordered bitstreams for each spatial resolution are completely rate-embedded (fine granular at the bit level) and can be truncated at any point up to the level of a perfect lossless reconstruction. Note that the markers in the main bitstream are only used by the parser and do not need to be sent to the decoder.</p><p>The decoder required for decoding the reordered bitstreams follows the encoder exactly, similar to the original SPIHT algorithm. It needs to keep track of the various lists only for spatial resolution levels greater or equal to the required one. Thus, the proposed algorithm naturally provides computational scalability as well.</p></sec></sec><sec id="sec1-3"><title>SIMULATION DETAILS</title><p>As volumetric medical data we have chosen the four gray-scale (eight bits per voxel) MR data sets that were also used in.[<xref ref-type="bibr" rid="ref13">13</xref><xref ref-type="bibr" rid="ref14">14</xref><xref ref-type="bibr" rid="ref27">27</xref>] These data sets are available online for downloading at.[<xref ref-type="bibr" rid="ref28">28</xref>] A description of the MR sets is given in <xref ref-type="table" rid="T1">Table 1</xref>. In each slice, to extract objects from the unimportant, very low magnitude background voxels and a two-stage threshold-based segmentation scheme were applied. In the first stage, each MR set was compared with a threshold and all voxels that exceeded the threshold were considered to belong to the object. In the second stage, all the background areas that were surrounded by the object were reclassified to belong to the object. Similarly, small object regions not connected with the main object were removed and classified as the background. The threshold chosen was small enough to make sure that the extracted region in each slice completely covered the true object. Note that the main contribution of this article does not include object segmentation and the segmentation process mentioned here is only to have a rough mask, which covers the whole area of the object (to make sure that the main object is completely inside the mask) to enable us to provide results for object-based coding cases and show this functionality of the proposed coding algorithm. The first slices of the MR test sets and their appropriate segmentation masks are shown in Figures <xref ref-type="fig" rid="F8">8</xref> and <xref ref-type="fig" rid="F9">9</xref>, respectively.</p><table-wrap id="T1" position="float"><label>Table 1</label><caption><p>Description of the MR data sets used as test volumetric medical images in this article</p></caption><graphic xlink:href="JMSS-1-1-g008"/></table-wrap><fig id="F8" position="float"><label>Figure 8</label><caption><p>The first slice of each volumetric MR data set. (a) MR ped chest; (b) MR liver t1; (c) MR liver t2e1; (d) MR sag head</p></caption><graphic xlink:href="JMSS-1-1-g009"/></fig><fig id="F9" position="float"><label>Figure 9</label><caption><p>Segmentation masks for the first slice of each volumetric MR data set. (a) MR ped chest; (b) MR liver t1; (c) MR liver t2e1; (d) MR sag head</p></caption><graphic xlink:href="JMSS-1-1-g010"/></fig><p>For object-based wavelet decomposition, an efficient, non-expansive SA-DWT approach, based on the method introduced in[<xref ref-type="bibr" rid="ref29">29</xref>] was implemented. The GOS size was set to 4. Note that, as mentioned before, a small GOS size is favorable for easy and fast random access to certain slices in the data set bitstream. Two levels of 1D decomposition in the axial domain were first applied to the input GOS followed by three levels of 2D decomposition in the transaxial (spatial) domain. The integer I(2,2) wavelet filter bank[<xref ref-type="bibr" rid="ref30">30</xref>] was implemented in a lifting scheme and used for both axial and transaxial decompositions, with symmetric extension at the boundaries of the GOS object.</p><p>For lossy decoding, the wavelet transform should be unitary or near-unitary, so that the distortion in the transform domain can be directly related to the distortion in the voxel domain.</p><p>As the reversible integer transform was not unitary, the 2D sub-band weighting scheme used in[<xref ref-type="bibr" rid="ref31">31</xref>] was extended to 3D, and applied, to make the transform approximately unitary.</p><p>The 3DOBHS-SPIHT encoder was set to progressively encode the decomposed objects of all GOSs, of each MR test set, to the lossless stage (i.e., coding from the maximum required bitplane to bitplane zero), with three levels of spatial scalability support. As the last GOS of each MR data set contains less than four slices, some blank slices were added to the end in order to fix the GOS size to four. The flexibility of the 3D coding of data sets with any number of slices is provided by the object-based functionality of both the transform and the coding process. The binary GOS mask information was encoded by an arithmetic binary coding scheme.[<xref ref-type="bibr" rid="ref32">32</xref>]</p><p>After encoding, the 3DOBHS-SPIHT bitstream was fed into a parser to produce progressive (by quality) bitstreams for multi-resolution lossy-to-lossless decoding. Reference slices for the lower spatial resolutions were defined by taking the lowest resolution sub-band after applying appropriate levels of 2D SA-IDWT to the slices. In the original GOS, and the fidelity was measured by the PSNR defined as</p><p>PSNR=10log10(PEAK<sup>2</sup>/MSE) dB &#x02003;&#x02003;&#x02003;&#x02003; (1)</p><p>where MSE is the mean squared error between the original reference and the reconstructed data, and PEAK is the maximum possible magnitude for a voxel, which is 255 for the MR test sets. The bit rates (bits per voxel) for all resolutions were calculated according to the total number of voxels in the original full resolution GOS.</p></sec><sec id="sec1-4"><title>RESULTS AND DISCUSSION</title><p><xref ref-type="table" rid="T2">Table 2</xref> provides the average bits per voxel (bpv) and compression ratios (CR) obtained by 3DOBHS-SPIHT for multi-resolution lossless coding of the four MR object sets. For comparison, results of the same cases obtained by a 2DOBHS-SPIHT coding approach, which encodes each slice separately, are also provided in this table. For all the three spatial resolutions (quarter, half, and full) specified in <xref ref-type="table" rid="T2">Table 2</xref>, the 3DOBHS-SPIHT method significantly outperforms the 2DOBHS-SPIHT method. As the results show for both methods, a lossless version of the lower resolutions can be obtained at very small rates. Note that the rate consumed for coding of the binary mask information of the MR sets was between 0.011 bpv and 0.014 bpv, and therefore ignorable, compared to the rate spent for coding of the object texture.</p><table-wrap id="T2" position="float"><label>Table 2</label><caption><p>Average bits per voxel and compression ratios obtained for lossless encoding of the MR data sets</p></caption><graphic xlink:href="JMSS-1-1-g011"/></table-wrap><p>In <xref ref-type="table" rid="T3">Table 3</xref>, the 3DOBHS-SPIHT results for lossless coding at full resolution are compared with some other coding approaches.</p><table-wrap id="T3" position="float"><label>Table 3</label><caption><p>Comparison results for average bits per voxel and compression ratios obtained for lossless encoding of the MR data sets at full resolution with different coding methods</p></caption><graphic xlink:href="JMSS-1-1-g012"/></table-wrap><p>For the 3DHS-SPIHT, 3D-SPIHT, 2DHS-SPIHT, 2DSPIHT, JPEG2000, JPEG-LS, and WinZip cases, which are not object-based, the object background in all slices was set to zero before encoding. This results in better compression efficiency, and therefore, it is a fair comparison with object-based coding cases (i.e., 2DOBHS-SPIHT and 3DOBHS-SPIHT). A very small difference between the lossless compression rates of 2DHS-SPIHT and 2DSPIHT is due to the extra budget consumed by 2DHS-SPIHT for the markers put into the bitstream, which are required for the parsing process. The 3DHS-SPIHT approach is a 3D extension of the 2DHS-SPIHT approach and uses the asymmetric tree structure, but unlike 3DOBHS-SPIHT, does not support the object-based coding functionality. To show the efficiency of the asymmetric tree structure, results for 3D-SPIHT, which use the symmetric tree structure, are also provided in this table.</p><p>The results show a better performance for 3DHS-SPIHT than 3D-SPIHT. Among the 2D coding algorithms in <xref ref-type="table" rid="T3">Table 3</xref>, JPEG-LS, which is especially tailored for lossless coding, shows a slightly better compression efficiency than 2DOB-SPIHT, however, it does not support the spatial scalability feature. The proposed 3DOBHS-SPIHT algorithm shows a significantly better performance than all other coding approaches in the table. To show the effect of GOS size on the 3DOBHS-SPIHT coding performance, <xref ref-type="table" rid="T4">Table 4</xref> provides the lossless coding results at a full spatial resolution for three different GOS sizes. As expected, by increasing the GOS size, the coding performance was increased.</p><table-wrap id="T4" position="float"><label>Table 4</label><caption><p>Results obtained for lossless encoding of the MR data sets at full resolution with different GOS sizes by 3DOBHS-SPIHT</p></caption><graphic xlink:href="JMSS-1-1-g013"/></table-wrap><p>It should be mentioned that all results reported here for SPIHT and HS-SPIHT, for both object-based and non-object-based, the 2D and 3D coding cases were obtained without extra arithmetic coding of the encoder output bitstreams. As shown in,[<xref ref-type="bibr" rid="ref12">12</xref>] an improved coding performance for SPIHT and consequently for HS-SPIHT can be achieved by further compressing the binary bitstreams with an arithmetic coder.</p><p>To show the full scalability of 3DOBHS-SPIHT, <xref ref-type="table" rid="T5">Table 5</xref> presents some numerical results for multi-resolution decoding of the MR test sets at a wide range of bit rates. This is based on a scenario of one-time-encoding and multiple-times-decoding, and by parsing the encoder bitstream for various resolutions and rates. The parsed bitstream was decoded by the 3DOBHS-SPIHT decoder and the fidelity was measured by the PSNR. For comparison purposes, the results for the same resolutions and rates obtained from the 2DOB-SPIHT algorithm are also provided in the table. As the results clearly show, the 3D coding significantly outperforms the 2D coding for all resolutions and rates. For all resolutions, as the rate decreases, the difference between the 3D and 2D PSNRs increases. Thus, the 3D case benefits more from the better compaction of the GOS energy in the lower wavelet sub-bands provided by the 3D wavelet decomposition.</p><table-wrap id="T5" position="float"><label>Table 5</label><caption><p>PSNR results for lossy decoding of the lossless bitstreams at different spatial resolutions and rates</p></caption><graphic xlink:href="JMSS-1-1-g014"/></table-wrap><p>To give a visual impression, slice 9 of the MR sag head data set was decoded at three different spatial resolutions (full, half, and quarter).</p><p><xref ref-type="fig" rid="F10">Figure 10</xref> shows the original slice 9. Figures <xref ref-type="fig" rid="F11">11</xref> and <xref ref-type="fig" rid="F12">12</xref> give visual results for scalable decoding, reconstructed by the 3DOBHS-SPIHT and 2DOBHS-SPIHT decoders at 0.05 bpv, 0.1 bpv, and 0.2 bpv, respectively. As one can see, 3D-OBHS-SPIHT not only has a higher PSNR, but also a much better visual quality than 2DOBHS-SPIHT. The same holds for all other scalable decoders mentioned earlier.</p><fig id="F10" position="float"><label>Figure 10</label><caption><p>Original slice 9 of MR sag head at full, half, and quarter resolution</p></caption><graphic xlink:href="JMSS-1-1-g015"/></fig><fig id="F11" position="float"><label>Figure 11</label><caption><p>Scalable lossy reconstruction of slice 9 of MR sag head by 3DOBHS-SPIHT. Left: full resolution, bpv=0.2, PSNR=36.63dB. Middle: half resolution, bpv=0.1, PSNR=41.37dB. Right: quarter resolution, bpv=0.05, PSNR=48.76dB</p></caption><graphic xlink:href="JMSS-1-1-g016"/></fig><fig id="F12" position="float"><label>Figure 12</label><caption><p>Scalable lossy reconstruction of slice 9 of MR sag head by 2DOBHS-SPIHT. Left: full resolution, bpv=0.2, PSNR=33.33dB. Middle: half resolution, bpv=0.1, PSNR=35.90dB. Right: quarter resolution, bpv=0.05, PSNR=37.07dB</p></caption><graphic xlink:href="JMSS-1-1-g017"/></fig></sec><sec id="sec1-5"><title>CONCLUSIONS</title><p>An object-based, highly scalable 3D wavelet coding system, 3DOBHS-SPIHT, for lossy-to-lossless coding of volumetric medical images was presented. The 3D medical data set was first organized in groups of slices (GOS) and the objects of interest were segmented from the background in each slice. A 3D (1D axial+2D transaxial) reversible shape-adaptive integer DWT was used to decompose the input GOS. The 3DSPIHT algorithm was modified to support spatial scalability. The symmetric tree definition of the original 3DSPIHT algorithm was improved to an asymmetric structure, which allowed small GOS sizes, which not only facilitated more efficient random access to the slices, but also required less memory from the coding system. The 3DOBHS-SPIHT bitstream was fully scalable and easily re-orderable by a simple parser for multi-resolution decoding at lossy-to-lossless rates. For the parsing process, the parser did not need to decode the main bitstream. The experimental results on some MR data sets provided for both lossy and lossless coding, at various spatial resolution levels, showed excellent performance of the proposed 3DOBHS-SPIHT algorithm. Even at the lossless stage, the proposed coder significantly outperformed other known non-scalable coders. Possessing important features, such as, arbitrarily shaped object coding, resolution scalability functionality, and progressive lossy-to-lossless coding made the proposed approach attractive for volumetric medical image information archiving and transmission systems.</p></sec><sec id="sec1-6"><title>BIOGRAPHIES</title><p><graphic xlink:href="JMSS-1-1-g018.jpg" position="float"/></p><p><bold>Habibiollah Danyali</bold> received the B.Sc. and M.Sc. degrees in Electrical Engineering respectively from the Isfahan University of Technology, Isfahan, Iran, in 1991 and the Tarbiat Modarres University, Tehran, Iran, in 1993. From 1994 to 2000, he was with the Department of Electrical Engineering, University of Kurdistan, Sanandaj, Iran, as a lecturer. In 2004, he received his PhD degree in Computer Engineering from the University of Wollongong, Australia. After finishing his PhD, he continued his academic work with University of Kurdistan as an assistant professor. As of September 2009, he is with the Department of Telecommunication Engineering, Shiraz University of Technology, Shiraz, Iran. He is a Member of the IEEE. His research interests include data hiding, scalable image and video coding, medical image processing and biometrics.</p><p><graphic xlink:href="JMSS-1-1-g019.jpg" position="float"/></p><p><bold>Alfred Mertins</bold> received the Dipl.-Ing. degree in Electrical Engineering from the University of Paderborn, Germany, in 1984, the Dr.-Ing. degree in Electrical Engineering and the Dr.-Ing. habil. degree in Telecommunications from the Hamburg University of Technology, Germany, in 1991 and 1994, respectively. From 1986 to 1991, he was with the Hamburg University of Technology, Germany, from 1991 to 1995 with the Microelectronics Applications Center Hamburg, Germany, from 1996 to 1997 with the University of Kiel, Germany, from 1997 to 1998 with the University of Western Australia, and from 1998 to 2003 with the University of Wollongong, Australia. From April 2003 to October 2006, he was with the University of Oldenburg, Germany. In November 2006 he joined the University of L&#x000fc;beck, Germany, as a Professor of Computer Science and director of the Institute for Signal Processing. He is a Senior Member of the IEEE. His research interests include speech, audio, image and video processing, wavelets and filter banks, and digital communications</p></sec></body><back><fn-group><fn fn-type="supported-by"><p><bold>Source of Support:</bold> Nil</p></fn><fn fn-type="conflict"><p><bold>Conflict of Interest:</bold> None declared</p></fn></fn-group><ref-list><title>REFERENCES</title><ref id="ref1"><label>1</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wallace</surname><given-names>G. K.</given-names></name></person-group><article-title>The JPEG still picture compression standard</article-title><source>Commun ACM</source><year>1991</year><volume>34</volume><fpage>31</fpage><lpage>4</lpage></element-citation></ref><ref id="ref2"><label>2</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Weinberger</surname><given-names>M. J.</given-names></name><name><surname>Seroussi</surname><given-names>G.</given-names></name><name><surname>Sapiro</surname><given-names>G.</given-names></name></person-group><source>LOCO-I: A low complexity, context-based lossless image compression algorithm</source><year>1996</year><publisher-loc>New York</publisher-loc><publisher-name>Proc. IEEE Data Compression Conference</publisher-name><fpage>140</fpage><lpage>9</lpage></element-citation></ref><ref id="ref3"><label>3</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Christopoulos</surname><given-names>C.</given-names></name><name><surname>Skordas</surname><given-names>A.</given-names></name><name><surname>Ebrahimi</surname><given-names>T.</given-names></name></person-group><article-title>The JPEG 2000 still image coding system: An overview</article-title><source>IEEE Trans Consum Electron</source><year>2000</year><volume>46</volume><fpage>1103</fpage><lpage>27</lpage></element-citation></ref><ref id="ref4"><label>4</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Penedo</surname><given-names>M.</given-names></name><name><surname>Pearlman</surname><given-names>W.</given-names></name><name><surname>Tahoces</surname><given-names>P. G.</given-names></name><name><surname>Souto</surname><given-names>M.</given-names></name><name><surname>Vidal</surname><given-names>J. J.</given-names></name></person-group><article-title>Regionbased wavelet coding methods for digital mammography</article-title><source>IEEE Trans Med Imaging</source><year>2003</year><volume>22</volume><fpage>1288</fpage><lpage>96</lpage><pub-id pub-id-type="pmid">14552582</pub-id></element-citation></ref><ref id="ref5"><label>5</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Menegaz</surname><given-names>G.</given-names></name><name><surname>Thiran</surname><given-names>J. P</given-names></name></person-group><article-title>Lossy to loss-less object based coding of 3-D MRI data</article-title><source>IEEE Trans Image Process</source><year>2002</year><volume>11</volume><fpage>1053</fpage><lpage>61</lpage><pub-id pub-id-type="pmid">18249726</pub-id></element-citation></ref><ref id="ref6"><label>6</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Tasdoken</surname><given-names>S.</given-names></name><name><surname>Cuhadar</surname><given-names>A.</given-names></name></person-group><article-title>Quadtree-based multiregion multiquality image coding</article-title><source>IEEE Signal Process Lett</source><year>2004</year><volume>11</volume><fpage>101</fpage><lpage>3</lpage></element-citation></ref><ref id="ref7"><label>7</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Doukas</surname><given-names>C.</given-names></name><name><surname>Maglogiannis</surname><given-names>I.</given-names></name></person-group><article-title>Region of interest coding techniques for medical image compression</article-title><source>IEEE Eng Med Biol Mag</source><year>2007</year><volume>26</volume><fpage>29</fpage><lpage>35</lpage><pub-id pub-id-type="pmid">17941320</pub-id></element-citation></ref><ref id="ref8"><label>8</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Anastassopoulos</surname><given-names>G. K.</given-names></name><name><surname>Skodras</surname><given-names>A. N.</given-names></name></person-group><article-title>JPEG2000 ROI coding in medical imaging applications</article-title><source>Proc. Second IASTED Int. Conf. Visualization, Imaging and Image Processing</source><year>2002</year><publisher-loc>Anahim, CA, USA</publisher-loc><publisher-name>ACTA Press</publisher-name><fpage>783</fpage><lpage>8</lpage></element-citation></ref><ref id="ref9"><label>9</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Christopoulos</surname><given-names>C.</given-names></name><name><surname>Askelof</surname><given-names>J.</given-names></name><name><surname>Larsson</surname><given-names>M.</given-names></name></person-group><article-title>Efficient methods for coding regions of interest in the upcoming JPEG2000 still image coding standard</article-title><source>IEEE Signal Process Lett</source><year>2000</year><volume>7</volume><fpage>247</fpage><lpage>9</lpage></element-citation></ref><ref id="ref10"><label>10</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Woods</surname><given-names>J.</given-names></name><name><surname>Han</surname><given-names>S. C.</given-names></name><name><surname>Hsiang</surname><given-names>S. T.</given-names></name><name><surname>Naveen</surname><given-names>T.</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Bovik</surname><given-names>A.</given-names></name></person-group><article-title>Spatiotemporal subband / wavelet video compression</article-title><source>Handbook of Image and Video Processing</source><year>2000</year><publisher-loc>United States</publisher-loc><publisher-name>Academic Press</publisher-name><fpage>575</fpage><lpage>84</lpage></element-citation></ref><ref id="ref11"><label>11</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Taubman</surname><given-names>D. S.</given-names></name><name><surname>Marcellin</surname><given-names>M. W.</given-names></name></person-group><source>JPEG2000: Image Compression Fundamentals, Standards, and Practice</source><year>2002</year><publisher-loc>Boston, MA</publisher-loc><publisher-name>Kluwer</publisher-name></element-citation></ref><ref id="ref12"><label>12</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Said</surname><given-names>A.</given-names></name><name><surname>W.A.</surname><given-names>Pearlman</given-names></name></person-group><article-title>A new, fast and efficient image codec based on set partitioning in hierarchical trees</article-title><source>IEEE Trans Circ Syst Video Technol</source><year>1996</year><volume>6</volume><fpage>243</fpage><lpage>50</lpage></element-citation></ref><ref id="ref13"><label>13</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>Y</given-names></name><name><surname>Pearlman</surname><given-names>W. A.</given-names></name></person-group><article-title>Lossless volumetric medical image compression</article-title><source>Proc. SPIE</source><year>1999</year><volume>3808</volume><fpage>305</fpage><lpage>12</lpage></element-citation></ref><ref id="ref14"><label>14</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Cho</surname><given-names>S.</given-names></name><name><surname>Kim</surname><given-names>D.</given-names></name><name><surname>Pearlman</surname><given-names>W. A.</given-names></name></person-group><article-title>Lossless compression of volumetric medical images with improved 3-D SPIHT algorithm</article-title><source>J Digital Imaging</source><year>2004</year><volume>17</volume><fpage>57</fpage><lpage>63</lpage></element-citation></ref><ref id="ref15"><label>15</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pearlman</surname><given-names>W. A.</given-names></name></person-group><article-title>Trends of tree-based, set-partitioning compression techniques in still and moving image systems</article-title><source>Proc. Picture Coding Symposium (PCS&#x02019;2001), Seoul, Korea</source><year>2001</year><fpage>1</fpage><lpage>8</lpage></element-citation></ref><ref id="ref16"><label>16</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>B.-J.</given-names></name><name><surname>Pearlman</surname><given-names>W. A.</given-names></name></person-group><article-title>An embedded video coder using threedimensional set partitioning in hierarchical trees (SPIHT)</article-title><source>Proc. IEEE Data Compression Conference</source><year>1997</year><month>3</month><fpage>251</fpage><lpage>60</lpage></element-citation></ref><ref id="ref17"><label>17</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kim</surname><given-names>B.J.</given-names></name><name><surname>Xiong</surname><given-names>Z.</given-names></name><name><surname>Pearlman</surname><given-names>W. A.</given-names></name></person-group><article-title>Low bit-rate scalable video coding with 3-D set partitioning in hierarchical trees (3-D SPIHT)</article-title><source>IEEE Trans Circ Syst Video Technol</source><year>2000</year><volume>10</volume><fpage>1374</fpage><lpage>87</lpage></element-citation></ref><ref id="ref18"><label>18</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>He</surname><given-names>C</given-names></name><name><surname>Dong</surname><given-names>J.</given-names></name><name><surname>Zheng</surname><given-names>Y. F.</given-names></name><name><surname>Gao</surname><given-names>Z.</given-names></name></person-group><article-title>Optimal 3-D coefficient tree structure for 3-d wavelet video coding</article-title><source>IEEE Trans Circ Syst Video Technol</source><year>2003</year><volume>13</volume><fpage>961</fpage><lpage>72</lpage></element-citation></ref><ref id="ref19"><label>19</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Schelkens</surname><given-names>P.</given-names></name><name><surname>Munteanu</surname><given-names>A.</given-names></name><name><surname>Barbarien</surname><given-names>J.</given-names></name><name><surname>Galca</surname><given-names>M.</given-names></name><name><surname>Giro-Nieto</surname><given-names>X.</given-names></name><name><surname>Cornelis</surname><given-names>J.</given-names></name></person-group><article-title>Wavelet coding of volumetric medical datasets</article-title><source>IEEE Trans Med Imaging</source><year>2003</year><volume>22</volume><fpage>441</fpage><lpage>58</lpage><pub-id pub-id-type="pmid">12760560</pub-id></element-citation></ref><ref id="ref20"><label>20</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Menegaz</surname><given-names>G.</given-names></name><name><surname>Thiran</surname><given-names>J. P</given-names></name></person-group><article-title>Three-dimensional encoding/two dimentional decoding of medical data</article-title><source>IEEE Trans Medical Imaging</source><year>2003</year><volume>22</volume><fpage>424</fpage><lpage>39</lpage></element-citation></ref><ref id="ref21"><label>21</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Xiong</surname><given-names>Z.</given-names></name><name><surname>Wu</surname><given-names>X.</given-names></name><name><surname>Cheng</surname><given-names>S.</given-names></name><name><surname>Hua</surname><given-names>J.</given-names></name></person-group><article-title>Lossy-to-lossless compression of medical volumetric data using three-dimensional integer wavelet transforms</article-title><source>IEEE Trans Med Imaging</source><year>2003</year><volume>22</volume><fpage>459</fpage><lpage>70</lpage><pub-id pub-id-type="pmid">12760561</pub-id></element-citation></ref><ref id="ref22"><label>22</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Danyali</surname><given-names>H</given-names></name><name><surname>Mertins</surname><given-names>A.</given-names></name></person-group><article-title>Highly scalable image compression based on SPIHT for network applications</article-title><source>Proc. IEEE Int. Conf. Image Processing (ICIP&#x02019;2002)</source><year>2002</year><month>9</month><publisher-loc>NY, USA</publisher-loc><publisher-name>Rochester</publisher-name><fpage>217</fpage><lpage>20</lpage></element-citation></ref><ref id="ref23"><label>23</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Danyali</surname><given-names>H.</given-names></name><name><surname>Mertins</surname><given-names>A.</given-names></name></person-group><article-title>Flexible, highly scalable, object-based wavelet image compression algorithm for network applicationss</article-title><source>IEE Proc Vis Image Signal Process</source><year>2004</year><volume>151</volume><fpage>498</fpage><lpage>510</lpage></element-citation></ref><ref id="ref24"><label>24</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Minami</surname><given-names>G.</given-names></name><name><surname>Xiong</surname><given-names>Z.</given-names></name><name><surname>Wang</surname><given-names>A.</given-names></name><name><surname>Mehrotra</surname><given-names>S.</given-names></name></person-group><article-title>3-D wavelet coding of video with arbitrary regions of support</article-title><source>IEEE Trans Circ Syst Video Technol</source><year>2001</year><volume>11</volume><fpage>1063</fpage><lpage>8</lpage></element-citation></ref><ref id="ref25"><label>25</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Yuan</surname><given-names>Y.</given-names></name><name><surname>Chan</surname><given-names>C. W.</given-names></name></person-group><article-title>Coding of arbitrarily shaped video objects based on SPIHT</article-title><source>IEEE Electron Lett</source><year>2000</year><volume>36</volume><fpage>1105</fpage><lpage>6</lpage></element-citation></ref><ref id="ref26"><label>26</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Danyali</surname><given-names>H.</given-names></name><name><surname>Mertins</surname><given-names>A.</given-names></name></person-group><article-title>Fully spatial and SNR scalable, SPIHT-based image coding for transmission over heterogenous networks</article-title><source>J Telecommun Inf Technol</source><year>2003</year><volume>2</volume><fpage>92</fpage><lpage>8</lpage></element-citation></ref><ref id="ref27"><label>27</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bilgin</surname><given-names>A.</given-names></name><name><surname>Sementilli</surname><given-names>J.</given-names></name><name><surname>Sheng</surname><given-names>F.</given-names></name><name><surname>Marcellin</surname><given-names>M. W.</given-names></name></person-group><article-title>Scalable image coding using revesible integer wavelet transforms</article-title><source>IEEE Trans Image Process</source><year>2000</year><volume>9</volume><fpage>1972</fpage><lpage>7</lpage><pub-id pub-id-type="pmid">18262932</pub-id></element-citation></ref><ref id="ref28"><label>28</label><element-citation publication-type="webpage"><article-title>Center for image processing research, ECSE rensselaer polytechnic institute web page</article-title><date-in-citation>Last accessed 2010 Jul 12</date-in-citation><comment>Available from:
<uri xlink:type="simple" xlink:href="http://www.cipr.rpi.edu">http://www.cipr.rpi.edu</uri></comment></element-citation></ref><ref id="ref29"><label>29</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>S.</given-names></name><name><surname>Li</surname><given-names>W.</given-names></name></person-group><article-title>Shape-adaptive discrete wavelet transforms for arbitrarily shaped visual object coding</article-title><source>IEEE Trans Circ Syst Video Technol</source><year>2000</year><volume>10</volume><fpage>725</fpage><lpage>43</lpage></element-citation></ref><ref id="ref30"><label>30</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Calderbank</surname><given-names>A.</given-names></name><name><surname>Daubechies</surname><given-names>I.</given-names></name><name><surname>Sweldens</surname><given-names>W.</given-names></name><name><surname>Yeo</surname><given-names>B. L.</given-names></name></person-group><article-title>Wavelet transforms that map integers to integers</article-title><source>Appl Comput Harmon Anal</source><year>1998</year><volume>5</volume><fpage>332</fpage><lpage>69</lpage></element-citation></ref><ref id="ref31"><label>31</label><element-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Hsiang</surname><given-names>S. T.</given-names></name></person-group><article-title>Highly scalable sub-band / wavelet image and video coding, Ph.D. dissertation, Electrical, Computer and System Engineering Department, Rensselaer Polytechnic Institute, Troy, NY 12180, USA </article-title><year>2002</year><month>1</month></element-citation></ref><ref id="ref32"><label>32</label><element-citation publication-type="book"><person-group person-group-type="author"><name><surname>Brady</surname><given-names>N.</given-names></name><name><surname>Bossen</surname><given-names>F.</given-names></name><name><surname>Murphy</surname><given-names>N.</given-names></name></person-group><article-title>Context- based arithmetic encoding of 2D shape sequences</article-title><source>Proc. IEEE Int. Conf. Image Processing (ICIP&#x02019;1997)</source><year>1997</year><month>10</month><volume>1</volume><publisher-loc>CA, USA</publisher-loc><publisher-name>Santa Barbara</publisher-name><fpage>29</fpage><lpage>32</lpage></element-citation></ref></ref-list></back></article>